<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Life on victoria.dev</title><link>https://victoria.dev/tags/life/</link><description>Recent content in Life on victoria.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>hello@victoria.dev (Victoria)</managingEditor><webMaster>hello@victoria.dev (Victoria)</webMaster><lastBuildDate>Fri, 08 Mar 2019 18:36:15 -0500</lastBuildDate><atom:link href="https://victoria.dev/tags/life/index.xml" rel="self" type="application/rss+xml"/><item><title>On doing great things</title><link>https://victoria.dev/blog/on-doing-great-things/</link><pubDate>Fri, 08 Mar 2019 18:36:15 -0500</pubDate><author>hello@victoria.dev (Victoria)</author><guid>https://victoria.dev/blog/on-doing-great-things/</guid><description>Some thoughts inspired by International Women&#39;s Day, Grace Hopper, and making contributions to the world of tech.</description><content:encoded>
&lt;p&gt;It&amp;rsquo;s International Women&amp;rsquo;s Day, and I&amp;rsquo;m thinking about Grace Hopper.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.m.wikipedia.org/wiki/Grace_Hopper&#34;&gt;Grace Hopper&lt;/a&gt; was an amazing lady who did great things. She envisioned and helped create programming languages that translate English terms into machine code. She persevered in her intention to join the US Navy from the time she was rejected at 34 years old, to being sworn in to the US Navy Reserve three years later, to retiring with the rank of commander at age 60&amp;hellip; then was recalled (twice) and promoted to the rank of captain at the age of 67. She advocated for distributed networks and developed computer testing standards we use today, among other achievements too numerous to list here.&lt;/p&gt;
&lt;p&gt;By my read, throughout her life, she kept her focus on her work. She did great things because she could do them, and felt some duty to do them. Her work speaks for itself.&lt;/p&gt;
&lt;p&gt;I recently came across a sizeable rock denoting a rather small, quiet park. It looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;grace-murray-hopper-park.jpeg#center&#34; alt=&#34;Signage on a rock denoting Grace Murray Hopper Park&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When I first saw this park, I thought it in no way did this great lady justice. But upon some reflection, its lack of assumption and grandeur grew on me. And today, it drew to the forefront something that&amp;rsquo;s been on my mind.&lt;/p&gt;
&lt;p&gt;I try and contribute regularly to the wide world of technology, usually through building things, writing, and mentorship. I sometimes get asked to participate in female-focused tech events. I hear things like, &amp;ldquo;too few developers are women,&amp;rdquo; or &amp;ldquo;we need more women in blockchain,&amp;rdquo; or &amp;ldquo;we need more female coders.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;For some time I haven&amp;rsquo;t been sure how to respond, because while my answer isn&amp;rsquo;t &amp;ldquo;yes,&amp;rdquo; it&amp;rsquo;s not exactly &amp;ldquo;no,&amp;rdquo; either. It&amp;rsquo;s really, &amp;ldquo;no, because&amp;hellip;&amp;rdquo; and it&amp;rsquo;s because I&amp;rsquo;m afraid. I&amp;rsquo;m afraid of misrepresenting myself, my values, and my goals.&lt;/p&gt;
&lt;p&gt;Discrimination and racism are real things. They exist in the minds and attitudes of a very small percentage of very loud people, as they always will. These people aren&amp;rsquo;t, however, the majority. They are small.&lt;/p&gt;
&lt;p&gt;I think that on the infrequent occasions when we encounter these people, we should do our best to lead by example. We should have open minds, tell our stories, listen to theirs. Try and learn something. That&amp;rsquo;s all.&lt;/p&gt;
&lt;p&gt;When I present myself, I don&amp;rsquo;t point out that I&amp;rsquo;m a woman. I don&amp;rsquo;t align myself with &amp;ldquo;women in tech&amp;rdquo; or seek to represent them. I don&amp;rsquo;t go to women-only meetings or support organizations that discriminate against men, or anyone at all. It&amp;rsquo;s not because I&amp;rsquo;m insecure as a woman, or ashamed that I&amp;rsquo;m a woman, or some other inflammatory adjective that lately shows up in conjunction with being female. It&amp;rsquo;s because I&amp;rsquo;ve no reason to point out my gender, any more than needing to point out that my hair is black, or that I&amp;rsquo;m short. It&amp;rsquo;s obvious and simultaneously irrelevant.&lt;/p&gt;
&lt;p&gt;When I identify with a group, I talk about the go-getters who wake up at 0500 every day and go work out - no matter the weather, or whether they feel like it. I tell stories about the people I met in different countries around the world, who left home, struck out on their own, and had an adventure, because they saw value in the experience. I identify with people who constantly build things, try things, design and make things, and then share those things with the world, because they love to do so. This is how I see myself. This is what matters to me.&lt;/p&gt;
&lt;p&gt;Like the unassuming park named after an amazing woman, when truly great things are done, they are done relatively quietly. Not done for the fanfare of announcing them to the world, but for the love of the thing itself. So go do great things, please. The world still needs them.&lt;/p&gt;</content:encoded></item><item><title>How to set up a short feedback loop as a solo coder</title><link>https://victoria.dev/blog/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/</link><pubDate>Mon, 02 Jul 2018 10:08:41 -0400</pubDate><author>hello@victoria.dev (Victoria)</author><guid>https://victoria.dev/blog/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/</guid><description>Strategies for continuous improvement when you&#39;re a freelance developer.</description><content:encoded>
&lt;img src="https://victoria.dev/blog/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/cover_feedback-pbjreview_hu8e37b70b3728865778c1f4fe4adf7fff_53513_640x0_resize_box_2.png" width="640" height="288"/>
&lt;p&gt;I&amp;rsquo;ve spent the last couple years as a solo freelance developer. Comparing this experience to previously working in companies, I&amp;rsquo;ve noticed that those of us who work alone can have fewer iterative opportunities for improvement than developers who work on teams. Integral to having opportunities to improve is the concept of a short feedback loop: a process of incorporating new learning from observation and previous experience continuously over a short period of time. This process has to be &lt;em&gt;manufactured&lt;/em&gt; by people working mostly alone, instead of, as is often the case, &lt;em&gt;adopted&lt;/em&gt; when you join a team.&lt;/p&gt;
&lt;p&gt;In this post I hope to share what I&amp;rsquo;ve learned about setting yourself up to improve quickly and continuously as a solo coder.&lt;/p&gt;
&lt;h1 id=&#34;about-feedback-loops&#34;&gt;About feedback loops&lt;/h1&gt;
&lt;p&gt;United States Air Force Colonel John Boyd developed the concept of the &lt;a href=&#34;https://en.wikipedia.org/wiki/OODA_loop&#34;&gt;OODA loop&lt;/a&gt;, OODA being an acronym for &lt;em&gt;observe, orient, decide, act&lt;/em&gt;. In military operations, this illustrates a process of decision-making based on the constant ingestion of new information:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Observe:&lt;/strong&gt; Obtain raw information about unfolding circumstances and the current environment.&lt;br /&gt;
&lt;strong&gt;Orient:&lt;/strong&gt; Put raw observations in context. Consider such things as relevancy to the current situation and previously gained knowledge and expertise.&lt;br /&gt;
&lt;strong&gt;Decide:&lt;/strong&gt; Make a plan for moving towards your goal.&lt;br /&gt;
&lt;strong&gt;Act:&lt;/strong&gt; Execute the plan.&lt;/p&gt;
&lt;p&gt;Since it&amp;rsquo;s a loop, the &lt;em&gt;act&lt;/em&gt; stage leads directly back into the &lt;em&gt;observe&lt;/em&gt; stage. This is the critical &amp;ldquo;feed back&amp;rdquo; concept that enables increasingly successful iterations. It&amp;rsquo;s widely applicable beyond military operations - you may recognize it as the origin of the &lt;a href=&#34;https://en.wikipedia.org/wiki/PDCA&#34;&gt;PDCA&lt;/a&gt; (plan-do-check-act) method.&lt;/p&gt;
&lt;p&gt;I like the OODA loop for being a succinct illustration of a general feedback loop. Many concepts and working methods build on the idea of feedback loops, including &lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_software_development&#34;&gt;Agile software development&lt;/a&gt; methods.&lt;/p&gt;
&lt;h2 id=&#34;development-team-feedback-loop&#34;&gt;Development team feedback loop&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s look at what some components of a feedback loop for a developer on a team might look like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Direction from product owners or reviews from users&lt;/li&gt;
&lt;li&gt;Daily scrum/standup with whole team&lt;/li&gt;
&lt;li&gt;Prioritization with developer team&lt;/li&gt;
&lt;li&gt;Individual coding and testing&lt;/li&gt;
&lt;li&gt;Peer code review&lt;/li&gt;
&lt;li&gt;Deployment and performance monitoring&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Implicit in these steps is the support of co-workers and management - in other words, someone to answer to. How can a solo freelance developer create a similar environment of accountability?&lt;/p&gt;
&lt;h2 id=&#34;solo-developer-feedback-loop&#34;&gt;Solo developer feedback loop&lt;/h2&gt;
&lt;p&gt;Here are some possible steps that an individual freelance developer can implement to create a short feedback loop:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build discipline&lt;/li&gt;
&lt;li&gt;Clarify concrete top-level goals&lt;/li&gt;
&lt;li&gt;Prioritize and plan mid-level and low-level goals&lt;/li&gt;
&lt;li&gt;Automate your work&lt;/li&gt;
&lt;li&gt;Block out time for code review&lt;/li&gt;
&lt;li&gt;Block out time for process review&lt;/li&gt;
&lt;li&gt;Update your goals and processes with the results of your reviews&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;rsquo;ll cover each of these stages in detail below.&lt;/p&gt;
&lt;h1 id=&#34;build-discipline&#34;&gt;Build discipline&lt;/h1&gt;
&lt;p&gt;More of a prerequisite than a stage in itself, building discipline is what enables our short feedback loop to work. Nothing else in this article will be helpful unless we have the skill to do something we don&amp;rsquo;t want to do. Discipline is most certainly a skill. It can be learned, trained, and improved just like any other.&lt;/p&gt;
&lt;p&gt;Why is discipline so important? Because when we&amp;rsquo;re crunching to get a project completed this Friday evening, we&amp;rsquo;re not going to want to write a good commit message. We&amp;rsquo;re not going to want to clean up the code comments. We just want to see the darn thing go, &lt;em&gt;Hello, git push -f&lt;/em&gt;. It&amp;rsquo;s in those moments that discipline enables us to not miss an opportunity to practice, learn, and improve our work process. Discipline helps us avoid Friday night commits that turn into Monday morning &lt;code&gt;git reset --hard&lt;/code&gt;s.&lt;/p&gt;
&lt;h1 id=&#34;clarify-concrete-top-level-goals&#34;&gt;Clarify concrete top-level goals&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;feedback-topgoal.png&#34; alt=&#34;Envisioning a peanut butter and jelly sandwich&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Whether working for a client or bootstrapping our own best-new-app-ever, we won&amp;rsquo;t be able to measure any progress or improvements without something to measure them against.&lt;/p&gt;
&lt;p&gt;When I&amp;rsquo;m discussing a new project with a client, I always speak in terms of concrete achievements. This could take the form of accomplishing a specific feature by a certain date, or deciding what the MVP looks like to a user. This is as much to my benefit as my client&amp;rsquo;s. By agreeing, in writing, &lt;em&gt;what&lt;/em&gt; will be achieved and &lt;em&gt;when&lt;/em&gt;, my client and I have clearly defined top-level goals and can both assess how the project is progressing. When I&amp;rsquo;m working for myself, I treat myself as I would a client. I make a commitment, in writing, describing what will be achieved, and when. This can be something as simple as a goals list for the week, or as detailed as a kanban board.&lt;/p&gt;
&lt;p&gt;The point of having a concrete goal, however, is not to stick to it at all costs. It&amp;rsquo;s important to set an expectation, with ourselves and with our clients, that the goals will be revisited at mutually-agreeable dates over the course of the project. This enables the all-important &amp;ldquo;feed back&amp;rdquo; part of the loop.&lt;/p&gt;
&lt;h1 id=&#34;prioritize-and-plan-mid-level-and-low-level-goals&#34;&gt;Prioritize and plan mid-level and low-level goals&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;feedback-stepgoals.png&#34; alt=&#34;The components of a peanut butter and jelly sandwich&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Few goals are achieved all in one step. Even the simple process of making a peanut butter and jelly sandwich (a favourite computer programming &lt;a href=&#34;https://www.youtube.com/watch?v=y62zj9ozPOM&amp;amp;t=1016s&#34;&gt;teaching example&lt;/a&gt;) can be broken down into successively smaller, more precise instructions. While we humans may not require the granularity that a computer program does, goals that are chunked into time-boxed, achievable steps are much more easily digested. 🥪&lt;/p&gt;
&lt;p&gt;Start with the mid-level goals, and make each step concrete. If the goal is to release a new open source web app, for example, the steps might look like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Complete app JavaScript&lt;/li&gt;
&lt;li&gt;Create front end and stylesheet&lt;/li&gt;
&lt;li&gt;Do local tests&lt;/li&gt;
&lt;li&gt;Set up cloud server&lt;/li&gt;
&lt;li&gt;Deploy app to cloud&lt;/li&gt;
&lt;li&gt;Do tests&lt;/li&gt;
&lt;li&gt;Add repository to GitHub&lt;/li&gt;
&lt;li&gt;Post on Hacker News&lt;/li&gt;
&lt;li&gt;Profit!!!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each of the above examples encapsulates many smaller, low-level goals - we can think of these as our to-do list items. For example, &amp;ldquo;Set up cloud server&amp;rdquo; might involve:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Research cloud providers&lt;/li&gt;
&lt;li&gt;Decide on service and sign up&lt;/li&gt;
&lt;li&gt;Set up server/instance&lt;/li&gt;
&lt;li&gt;Add integrations&lt;/li&gt;
&lt;li&gt;Test deployment&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Our parameters for chunk sizes and what constitutes a &amp;ldquo;step&amp;rdquo; may be different from one another, and will likely change from project to project. If your mid-level and low-level steps clearly define a concrete path for achieving the top-level goals you set, then you&amp;rsquo;re in good shape. Later on, evaluating the decision process that brought us to these mid-level and low-level goals enables us to bring our feedback loop full circle.&lt;/p&gt;
&lt;h1 id=&#34;automate-your-work&#34;&gt;Automate your work&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;feedback-autorobot.png&#34; alt=&#34;Peanut butter and jelly sandwich robot&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I recently read a great article entitled &lt;a href=&#34;https://queue.acm.org/detail.cfm?id=3197520&#34;&gt;Manual Work is a Bug&lt;/a&gt;. It discusses a process by which successful developers document and eventually automate their work. The beauty of this idea is in its simplicity. By writing down the things we do manually, we&amp;rsquo;re able to correct and refine our processes. By refining our processes, we can more easily translate them into code snippets and scripts. With a collection of scripts that we can string together, we can automate our work.&lt;/p&gt;
&lt;p&gt;Automating work isn&amp;rsquo;t only about saving time. It reduces haven&amp;rsquo;t-had-my-coffee-yet errors, minimizes cognitive load allowing more room for creativity, and allows our processes to be repeatable across collaborators and projects. It help shorten our feedback loop by ensuring we aren&amp;rsquo;t doing the same thing three times in three different ways.&lt;/p&gt;
&lt;p&gt;We can begin to automate by starting our own personal wiki. If we build a habit of writing down every manual thing we do, no matter how basic it may seem at the time, we give ourselves more opportunities to spot patterns, and thus possible integrations and improvements.&lt;/p&gt;
&lt;p&gt;The first time we do something manually, we write out the steps. The second time, we follow the steps. This gives us the opportunity to correct and refine them based on what we&amp;rsquo;ve learned since the first time. Over successive iterations, we might replace parts of manual commands with variables; we might find handy snippets of bash scripts that automate just a part of our task. As long as we keep revising and improving our personal wiki, we&amp;rsquo;re moving towards automation.&lt;/p&gt;
&lt;h1 id=&#34;block-out-time-for-code-review&#34;&gt;Block out time for code review&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;cover_feedback-pbjreview.png&#34; alt=&#34;Reviewing a peanut butter and jelly sandwich with a clipboard&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s all too easy to commit messy code when we work alone. We think, &lt;em&gt;who&amp;rsquo;s going to see it? I&amp;rsquo;ll fix it later.&lt;/em&gt; Each time that happens, though, we&amp;rsquo;re building a habit. It&amp;rsquo;s a bad one.&lt;/p&gt;
&lt;p&gt;Working alone means there&amp;rsquo;s no one likely to give feedback on our commits when we&amp;rsquo;re doing something that doesn&amp;rsquo;t make sense, or that could be improved. Instead, we have to actively seek out opportunities to improve. Open source communities are amazing for this. There&amp;rsquo;s a wealth of information available to us in terms of coding styles, examples of refactored code, and a smorgasbord of snippets that achieve that-thing-we-were-trying-to-do but in fewer lines. We can learn all we please, if we just block out the time to do it.&lt;/p&gt;
&lt;p&gt;Schedule your own code review at a time that makes sense for you and the project you&amp;rsquo;re working on. This might be each time you finish a fix or feature, or at regular intervals daily or weekly. If you have someone who can help, book them. There are also &lt;a href=&#34;https://victoria.dev/blog/top-free-resources-for-developing-coding-superpowers/&#34;&gt;chatrooms full of people&lt;/a&gt; happy to lend a hand.&lt;/p&gt;
&lt;p&gt;Do some research on basic best practices for what you&amp;rsquo;re working on. Set yourself a time limit though, and take what you read with a grain of salt. There&amp;rsquo;s a lot of rabbit holes in that field. As a starting point, I&amp;rsquo;d recommend learning about DRY code, and watching &lt;a href=&#34;https://www.youtube.com/watch?v=p0O1VVqRSK0&amp;amp;feature=youtu.be&amp;amp;t=330&#34;&gt;Uncle Bob demand professionalism in software development&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;code-review-checklist&#34;&gt;Code review checklist&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s my personal code review checklist, based off some general best practices. Feel free to use it as a starting point for your own!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Victoria&amp;rsquo;s Code Review Extravaganza!&lt;/strong&gt;&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; This solves a high-priority item.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; This is a complete implementation that follows the specification.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Off-topic changes were not included and have been added to backlog.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Variable names are meaningful and there are no magic numbers.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Correct and useful error messages are returned at every opportunity.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; No debugging print statements were left in.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; This code is DRY and modular.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; This code is secure. Private and public code are well separated.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; This code is its own documentation, or the documentation is up to date.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; A five-year-old could follow this, seriously it&amp;rsquo;s that readable.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Unit tests successfully pass.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Master was merged into the branch and tested.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Formatting follows style guidelines.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; I cannot find any further edge cases or known defects.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; I would be happy if this code was publicly attributed to me.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; I fully understand what the code does and the impact of the changes I made.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; I actually verified that it actually does what I said it does.&lt;br /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.to/gonedark/writing-clean-code&#34;&gt;Here is an excellent example&lt;/a&gt; of cleaning up code with some of the above points in mind.&lt;/p&gt;
&lt;h1 id=&#34;block-out-time-for-process-review&#34;&gt;Block out time for process review&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;feedback-robotreview.png&#34; alt=&#34;Reviewing sandwich making robot with clipboard&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Just as we learn from reviewing our code, we refine our processes by reviewing them as well. Process review is most beneficial when visited at regular intervals throughout the project, not just after the project&amp;rsquo;s completion. For short-term projects, a good starting point for scheduling process reviews is at each half-mark - once midway through, and again after completion. Long-term projects may have reviews at each quarter-mark.&lt;/p&gt;
&lt;h2 id=&#34;process-review-questions&#34;&gt;Process review questions&lt;/h2&gt;
&lt;p&gt;Process review can be as simple as a short list of questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What were my top-level goals for this period? Did I meet them?&lt;/li&gt;
&lt;li&gt;What were my mid-level and low-level goals for this period? Did I meet them?&lt;/li&gt;
&lt;li&gt;Would I have been better served with different or more specific goals? Why?&lt;/li&gt;
&lt;li&gt;Did I successfully remove or automate obstacles?&lt;/li&gt;
&lt;li&gt;Did I stick to my code review schedule? Why or why not?&lt;/li&gt;
&lt;li&gt;How might I remove obstacles next time?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Setting aside dedicated time for our process review can help us to answer questions like these thoughtfully and honestly. This allows us to squeeze out every bit of learning we can from our review, helping to shorten our feedback loop.&lt;/p&gt;
&lt;h1 id=&#34;update-your-goals-and-processes-with-the-results-of-your-reviews&#34;&gt;Update your goals and processes with the results of your reviews&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;feedback-updategoals.png&#34; alt=&#34;Adding additional arms to robot while envisioning a multi-layer PB&amp;amp;J&#34; /&gt;&lt;/p&gt;
&lt;p&gt;All the performance data in the world is no good to us if we don&amp;rsquo;t put it into practice. With each successive code review, we can refine and add to our checklist. With what we learn from each process review, we can fine tune and improve our processes. The more we can invent concrete and observable ways to implement our learning, the more success we&amp;rsquo;ll have.&lt;/p&gt;
&lt;p&gt;Making a conscious effort to utilize and practice the things we&amp;rsquo;ve learned is the final, vital, component of our feedback loop. The more often we incorporate new learning, the shorter our loop becomes, allowing us to improve that much faster.&lt;/p&gt;</content:encoded><enclosure url="https://victoria.dev/blog/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/cover_feedback-pbjreview_hu8e37b70b3728865778c1f4fe4adf7fff_53513_640x0_resize_box_2.png" type="image/jpg"/></item><item><title>Why I&#39;m automatically deleting my old tweets using AWS Lambda</title><link>https://victoria.dev/blog/why-im-automatically-deleting-my-old-tweets-using-aws-lambda/</link><pubDate>Thu, 12 Apr 2018 10:51:15 -0500</pubDate><author>hello@victoria.dev (Victoria)</author><guid>https://victoria.dev/blog/why-im-automatically-deleting-my-old-tweets-using-aws-lambda/</guid><description>From now on, my tweets are ephemeral. Here’s why I’m deleting all my old tweets, and the AWS Lambda function I’m using to do all this for free.</description><content:encoded>
&lt;p&gt;From now on, my tweets are ephemeral. Here’s why I’m deleting all my old tweets, and the AWS Lambda function I’m using to do all this for free.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://victoria.dev/blog/why-im-automatically-deleting-my-old-tweets-using-aws-lambda/#ephemeral-tweets&#34;&gt;&lt;em&gt;Click here to skip to the code part.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;stuff-and-opinions&#34;&gt;Stuff and opinions&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve only been a one-bag nomad for a little over a year and a half. Before that, I lived as most people do in an apartment or a house. I owned furniture, more clothing than I strictly needed, and enough &amp;ldquo;stuff&amp;rdquo; to fill at least a few moving boxes. If I went to live somewhere else, moving for school or family or work, I packed up all my things and brought them with me. Over the years, I accumulated more and more stuff.&lt;/p&gt;
&lt;p&gt;Adopting what many would call a minimalist lifestyle has rapidly changed a lot of my longstanding views. Giving away all my stuff (an idea I once thought to be interesting in principle but practically a little bit ridiculous) has become normal. It&amp;rsquo;s normal for me, now, to not own things that I don&amp;rsquo;t use on a regular basis. I don&amp;rsquo;t keep wall shelves packed with old books or dishes or clothing or childhood toys because those items aren&amp;rsquo;t relevant to me anymore. I just keep fond memories, instead.&lt;/p&gt;
&lt;p&gt;Imagine, for a moment, that I still lived in a house. Imagine that in that house, on the fridge, is a drawing I made when I was six-years-old. In the bottom right corner of that drawing scribbled in green crayon are the words &amp;ldquo;broccoli is dumb - Victoria, Age 6.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;If you were in my house and saw that drawing on the fridge, would you assume that the statement &amp;ldquo;broccoli is dumb&amp;rdquo; comprised an accurate and current account of my opinions on broccoli? Of course not. I was six when I wrote that. I&amp;rsquo;ve had plenty of time to change my mind.&lt;/p&gt;
&lt;h1 id=&#34;social-media-isn-t-social&#34;&gt;Social media isn&amp;rsquo;t social&lt;/h1&gt;
&lt;p&gt;I have a friend whom I&amp;rsquo;ve known since we were both in kindergarten. We went through grade school together, then spoke to and saw each other on infrequent occasions across the years. We&amp;rsquo;re both adults now. Sometimes when we chat, we&amp;rsquo;ll recall some amusing memory from when we were younger. The nature of memory being what it is, I have no illusion that what we recall is recounted with much accuracy. Our impressions of things that happened - mistakes we made and moments of victory alike - are coloured by the experiences we&amp;rsquo;ve had since then, and all the things we&amp;rsquo;ve learned. An awkward moment at a school colleague&amp;rsquo;s birthday party becomes an example of a child learning to socialize, instead of the world-ending moment of embarrassment it probably felt like at the time.&lt;/p&gt;
&lt;p&gt;This is how memory works. In a sense, it gets updated, as well it should. People living in small communities remember things that their neighbour did many years ago, but recall them in the context of who their neighbour is now, and what their current relationship is like. This re-colouring of history is an important part of how people &lt;a href=&#34;https://www.smithsonianmag.com/science-nature/how-our-brains-make-memories-14466850/&#34;&gt;heal&lt;/a&gt;, &lt;a href=&#34;http://news.feinberg.northwestern.edu/2014/02/memory_rewrite/&#34;&gt;make good decisions&lt;/a&gt;, and &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3709095/&#34;&gt;socialize&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Social media does not do this. Your perfectly preserved tweet from five days or five years ago can be recalled with absolute accuracy. For most people, this is not particularly worrying. We tend to tweet about pretty mundane things - things that pop into mind when we&amp;rsquo;re bored and want someone to notice us. Individually, usually, our old tweets are pretty insignificant. In aggregate, however, they paint a pretty complete picture of a person&amp;rsquo;s random, unintentionally telling thoughts. This is the problem.&lt;/p&gt;
&lt;p&gt;The assumption made of things written in social media and on Twitter specifically is a very different assumption than you might make about someone&amp;rsquo;s notepad scribble from last week. I&amp;rsquo;m not endeavoring to speculate why - I&amp;rsquo;ve just seen enough cases of someone getting publicly flogged for something they posted years ago to know that it does happen. This is weird. If you wouldn&amp;rsquo;t assume that a notepad scribble from last week or a crayon drawing from decades ago reflects the essence of who someone is &lt;em&gt;now,&lt;/em&gt; why would you assume that an old tweet does?&lt;/p&gt;
&lt;p&gt;You are not the same person you were last month - you&amp;rsquo;ve seen things, read things, understood and learned things that have, in some small way, changed you. While a person may have the same sense of self and identity through most of their life, even this grows and changes over the years. We change our opinions, our desires, our habits. We are not stagnant beings, and we should not let ourselves be represented as such, however unintentionally.&lt;/p&gt;
&lt;h1 id=&#34;ephemeral-tweets&#34;&gt;Ephemeral tweets&lt;/h1&gt;
&lt;p&gt;If you look at my Twitter profile page today, you&amp;rsquo;ll see fewer tweets there than you have fingers (I hope). I&amp;rsquo;m using &lt;a href=&#34;https://github.com/victoriadrake/ephemeral&#34;&gt;ephemeral&lt;/a&gt; - a lightweight utility I wrote for use on &lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt; - to delete all my tweets older than a few days. I&amp;rsquo;m doing this for the same reason that I don&amp;rsquo;t hang on to stuff that I no longer use - that stuff isn&amp;rsquo;t relevant to me anymore. It doesn&amp;rsquo;t represent me, either.&lt;/p&gt;
&lt;p&gt;The code that makes up ephemeral is written in Go. AWS Lambda creates an environment for each Lambda function, so ephemeral utilizes environment variables for your private Twitter API keys and the maximum age of the tweets you want to keep, represented in hours, like &lt;code&gt;72h&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;consumerKey&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;TWITTER_CONSUMER_KEY&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;consumerSecret&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;TWITTER_CONSUMER_SECRET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;accessToken&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;TWITTER_ACCESS_TOKEN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;accessTokenSecret&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;TWITTER_ACCESS_TOKEN_SECRET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;maxTweetAge&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;MAX_TWEET_AGE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;panic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;missing required environment variable &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The program uses the &lt;a href=&#34;https://github.com/ChimeraCoder/anaconda&#34;&gt;anaconda&lt;/a&gt; library. It fetches your timeline up to the Twitter API&amp;rsquo;s limit of 200 tweets per request, then compares each tweet&amp;rsquo;s date of creation to your &lt;code&gt;MAX_TWEET_AGE&lt;/code&gt; variable to decide whether it&amp;rsquo;s old enough to be deleted. After deleting all the expired tweets, the Lambda function terminates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;deleteFromTimeline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;anaconda&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TwitterApi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ageLimit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Duration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getTimeline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Could not get timeline&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;createdTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;CreatedAtTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Couldn&amp;#39;t parse time &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Since&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createdTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ageLimit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;DeleteTweet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;DELETED: Age - &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Since&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createdTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Minute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; - &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Failed to delete! &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;No more tweets to delete.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Read the full code &lt;a href=&#34;https://github.com/victoriadrake/ephemeral/blob/master/main.go&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a use case like this, AWS Lambda has a free tier that costs nothing. If you&amp;rsquo;re any level of developer, it&amp;rsquo;s an extremely useful tool to become familiar with. For a full walkthrough with screenshots of how to set up a Lambda function that tweets for you, you can read &lt;a href=&#34;https://victoria.dev/blog/running-a-free-twitter-bot-on-aws-lambda/&#34;&gt;this article&lt;/a&gt;. The set up for ephemeral is the same, it just has an opposite function. :)&lt;/p&gt;
&lt;p&gt;I forked ephemeral from Adam Drake&amp;rsquo;s &lt;a href=&#34;https://github.com/adamdrake/harold&#34;&gt;Harold&lt;/a&gt;, a Twitter tool that has many useful functions beyond keeping your timeline trimmed. If you have more than 200 tweets to delete at first pass, please use Harold to do that first. You can run Harold with the &lt;code&gt;deletetimeline&lt;/code&gt; flag from your terminal.&lt;/p&gt;
&lt;p&gt;You may like to first &lt;a href=&#34;https://twitter.com/settings/your_twitter_data&#34;&gt;download all your tweets before deleting them&lt;/a&gt; for sentimental value.&lt;/p&gt;
&lt;h1 id=&#34;why-use-twitter-at-all&#34;&gt;Why use Twitter at all?&lt;/h1&gt;
&lt;p&gt;In anticipation of the question, let me say that yes, I do use Twitter besides just as a bucket for my Lambda functions to fill and empty. It has its benefits, most related to what I perceive to be its original intended purpose: to be a means of near-instant communication for short, digestible pieces of information reaching a widespread pool of people.&lt;/p&gt;
&lt;p&gt;I use it as a way to keep tabs on what&amp;rsquo;s happening &lt;em&gt;right now.&lt;/em&gt; I use it to comment on, joke about, and commiserate with things tweeted by the people I follow &lt;em&gt;right now.&lt;/em&gt; By keeping my timeline restricted to only the most recent few days, I feel like I&amp;rsquo;m using Twitter more like it was meant to be used: a way to join the conversation and see what&amp;rsquo;s happening in the world &lt;em&gt;right now&lt;/em&gt; - instead of just another place to amass more &amp;ldquo;stuff.&amp;rdquo;&lt;/p&gt;</content:encoded></item><item><title>About time</title><link>https://victoria.dev/blog/about-time/</link><pubDate>Wed, 22 Nov 2017 14:05:14 -0500</pubDate><author>hello@victoria.dev (Victoria)</author><guid>https://victoria.dev/blog/about-time/</guid><description>Some thoughts and concrete suggestions on saving society through programming.</description><content:encoded>
&lt;p&gt;This morning I read an article that&amp;rsquo;s been making the rounds lately: &lt;a href=&#34;http://nautil.us/issue/52/the-hive/modern-media-is-a-dos-attack-on-your-free-will&#34;&gt;Modern Media Is a DoS Attack on Your Free Will&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s made me think, which I must admit, I at first didn&amp;rsquo;t like. See, when I wake up in the morning (and subsequently wake up my computer) the first thing I do is go on Twitter to catch up on everything I missed while I was asleep. All this before my first coffee, mind you. Links on Twitter usually lead to stories on Medium, newly released apps on ProductHunt, and enticing sales on a new gadget or two on Amazon. Wherever it goes, in those blissfully half-awake mental recesses, the last thing I&amp;rsquo;m trying to do is think.&lt;/p&gt;
&lt;p&gt;However, yesterday, I also happened to listen to a podcast from freeCodeCamp. It was &lt;a href=&#34;https://twitter.com/ossia/status/932698783863001089&#34;&gt;#7: The code I&amp;rsquo;m still ashamed of&lt;/a&gt;. This lead to thoughts on the responsibilities of programmers - the people tasked with designing and building apps and systems meant to steer the very course of your life.&lt;/p&gt;
&lt;p&gt;This morning, the combined swirling mess of notions brought on by these two sources of information had, even before my first coffee, the unfortunate effect of making me think.&lt;/p&gt;
&lt;p&gt;Mostly, I thought about intention, and time.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t believe it&amp;rsquo;s wildly inaccurate to say that when you go about doing something in your daily life, you have a general awareness of your reason for doing it. If you leave your building and go down the street to Starbucks and buy a coffee, more often than not, it&amp;rsquo;s because you wanted a coffee. If you go to the corner store and buy a litre of milk, you probably intend to drink it. If you find yourself nicely dressed on a Friday night waiting at a well-decorated restaurant to meet another human being with whom you share an apparent mutual attraction, I can risk a guess that you&amp;rsquo;re after some form of pleasant human interaction.&lt;/p&gt;
&lt;p&gt;In each of these, and many more examples you can think up, the end goal is clearly defined. There is an expected final step to the process; an expected response; a return value.&lt;/p&gt;
&lt;p&gt;What is the return value of opening up the Twitter app? Browsing Facebook? Instagram? In fact, any social media?&lt;/p&gt;
&lt;p&gt;The concrete answer is that there isn&amp;rsquo;t one. Perhaps in those of us with resilient self-discipline, there may at least be some sort of time limitation. That&amp;rsquo;s the most we can hope for, however, and no wonder - that&amp;rsquo;s what these and other similar services have been &lt;em&gt;designed&lt;/em&gt; for. They&amp;rsquo;re built to be open-ended black-holes for our most precious resource&amp;hellip; time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the case of the Analytical Engine we have undoubtedly to lay out a certain capital of analytical labour in one particular line; but this is in order that the engine may bring us in a much larger return in another line.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ada Augusta (Ada Lovelace)&lt;/em&gt; - &lt;a href=&#34;https://www.fourmilab.ch/babbage/sketch.html&#34;&gt;Notes on &lt;em&gt;Sketch of The Analytical Engine&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Okay, so I did some more reading. Specifically, #ThrowbackThursday to the mid 1800&amp;rsquo;s and something my good friend Ada Lovelace once scribbled in a book. Widely considered one of the first computer programmers, she and Charles Babbage pioneered many concepts that programmers today take for granted. The one I&amp;rsquo;m going to hang my point on is, I think, nicely encapsulated in the above quote: the things programmers make are supposed to save you time.&lt;/p&gt;
&lt;p&gt;Save it. Not lose it.&lt;/p&gt;
&lt;p&gt;I think Ada and Charles would agree that, observing the effects of social media apps, clickbait news sites, and many other forms of attention-hogging interactivity that we haven&amp;rsquo;t even classified yet - something&amp;rsquo;s gone horribly wrong.&lt;/p&gt;
&lt;p&gt;What if, as programmers, we actually did something about it?&lt;/p&gt;
&lt;p&gt;Consider that collectively - no, even individually - we who design and build the workings of modern technology have an &lt;em&gt;incredible&lt;/em&gt; amount of power. The next indie app that goes viral on ProductHunt will consume hundreds of hours of time from its users. Where is all that untapped, pure potential going to? Some open-ended, inoffensive amusement? Another advertising platform thinly veiled as a game? Perhaps another drop of oil to smooth the machinery of The Great Engine of Commerce?&lt;/p&gt;
&lt;p&gt;I get it - programmers will build what they&amp;rsquo;re paid to build. That&amp;rsquo;s capitalism, that&amp;rsquo;s feeding your family, survival - life. I&amp;rsquo;m not trying to suggest we all quit our jobs, go live in the woods, and volunteer as humanitarians. That would be nice, but it&amp;rsquo;s impractical.&lt;/p&gt;
&lt;p&gt;But we all have side projects. Free time. What are you doing with yours?&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Before I&amp;rsquo;m accused of being too hand-wavy and idealistic, I want to offer a concrete suggestion. Build things that save time. Not in the &amp;ldquo;I&amp;rsquo;ve made yet another to-do list app for you to download,&amp;rdquo; kind of way, but in the &amp;ldquo;Here&amp;rsquo;s a one-liner to automate this mundane thing that would have taken you hours,&amp;rdquo; kind of way. Here, have a &lt;a href=&#34;https://victoria.dev/blog/batch-renaming-images-including-image-resolution-with-awk/&#34;&gt;shameless plug&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also really like this idea from the first article I mentioned, so hang on tight while I bring this full circle:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What’s one concrete thing companies could do now to stop subverting our attention?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I would just like to know what is the ultimate design goal of that site or that system that’s shaping my behavior or thinking. What are they really designing my experience for? Companies will say that their goal is to make the world open and connected or whatever. These are lofty marketing claims. But if you were to actually look at the dashboards that they’re designing, the high-level metrics they’re designing for, you probably wouldn’t see those things. You’d see other things, like frequency of use, time on site, this type of thing. If there was some way for the app to say, to the user, “Here’s generally what this app wants from you, from an attentional point of view,” that would be huge. It would probably be the primary way I would decide which apps I download and use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are so many ways I&amp;rsquo;d love to see this put into practice, from the obvious to the subversive. A little &lt;code&gt;position: sticky;&lt;/code&gt; banner? A custom meta tag in the header? Maybe a call to action like this takes more introspection and honesty than a lot of app makers are ready for&amp;hellip; but maybe it just takes a little of our time.&lt;/p&gt;</content:encoded></item><item><title>Things you need to know about becoming a Data Scientist</title><link>https://victoria.dev/blog/things-you-need-to-know-about-becoming-a-data-scientist/</link><pubDate>Fri, 31 Mar 2017 13:19:19 +0900</pubDate><author>hello@victoria.dev (Victoria)</author><guid>https://victoria.dev/blog/things-you-need-to-know-about-becoming-a-data-scientist/</guid><description>Five Data Scientists discuss a day in the life and what it takes to be a successful Data Scientist.</description><content:encoded>
&lt;img src="https://victoria.dev/blog/things-you-need-to-know-about-becoming-a-data-scientist/cover_datasci-panelists_hud75b6aee53166895e543034fff84f78c_103732_640x0_resize_q75_box.jpg" width="640" height="427"/>
&lt;p&gt;I recently attended a panel discussion hosted by General Assembly in Singapore entitled, &amp;ldquo;So you want to be a Data Scientist/Analyst&amp;rdquo;. The panel featured professionals in different stages of their careers and offered a wealth of information to an audience of hopefuls, including tips on how to land a job as a data scientist, and stories debunking myths that color this field.&lt;/p&gt;
&lt;h1 id=&#34;the-panelists&#34;&gt;The panelists&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Misrab Faizullah-Khan&lt;/strong&gt; - VP of Data Science, &lt;em&gt;GO_JEK&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;Anthony Ta&lt;/strong&gt; - Data Scientist, &lt;em&gt;Tech in Asia&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;Leow Guo Jun&lt;/strong&gt; - Data Scientist, &lt;em&gt;GO_JEK&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;Gabriel Jiang&lt;/strong&gt; - Data Scientist&lt;br /&gt;
&lt;strong&gt;Adam Drake&lt;/strong&gt; - Chief Data Officer, &lt;em&gt;Atazzo&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a rundown of the major points discussed, paraphrased for brevity.&lt;/p&gt;
&lt;h2 id=&#34;what-s-a-day-in-the-life-like&#34;&gt;What&amp;rsquo;s a day-in-the-life like?&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re mostly &amp;ldquo;data janitors.&amp;rdquo; A large part of working with data begins with and consists of data sanitation. Without quality data, you won&amp;rsquo;t get accurate results. Understanding how data should be sanitized largely encompasses skills that aren&amp;rsquo;t directly related to data analytics. To fully understand the problem you&amp;rsquo;re hoping to solve, you need to talk with the people involved. It&amp;rsquo;s important that everyone understands all the elements of a project, and exactly what those elements are being called. &amp;ldquo;Sales,&amp;rdquo; as an example, may be calculated differently depending on who you&amp;rsquo;re talking to.&lt;/p&gt;
&lt;h2 id=&#34;what-s-a-data-scientist-vs-data-analyst&#34;&gt;What&amp;rsquo;s a data &amp;ldquo;scientist&amp;rdquo; vs. data &amp;ldquo;analyst&amp;rdquo;?&lt;/h2&gt;
&lt;p&gt;It largely depends on the company you work for. &amp;ldquo;Data [insert modifier]&amp;rdquo; is only a recent distinction for a job field that has historically been called &amp;ldquo;Business Analytics.&amp;rdquo; In a smaller company, as with any other position, one person may handle a variety of data-related tasks under the title of &amp;ldquo;Data Scientist.&amp;rdquo; In a larger company with more staff and finer grain specialization, you may have a &amp;ldquo;Data Analyst&amp;rdquo; that handles less technical aspects, and a &amp;ldquo;Data Scientist&amp;rdquo; whose work is very technical and involves quantitative learning or machine learning.&lt;/p&gt;
&lt;p&gt;The field of data science/analytics is fresh enough that standard definitions for job titles really haven&amp;rsquo;t been agreed upon yet. When considering a position, focus on the company rather than the title.&lt;/p&gt;
&lt;h2 id=&#34;should-i-join-a-startup-or-large-company&#34;&gt;Should I join a startup or large company?&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s no wrong answer. Being aware of your own working style and preferences will help guide your decision.&lt;/p&gt;
&lt;p&gt;Startups generally offer more freedom and less micromanaging. This also means that you&amp;rsquo;ll necessarily receive less guidance, and will need to be able to figure stuff out, learn, and make progress under your own power.&lt;/p&gt;
&lt;p&gt;In a big company, you&amp;rsquo;re likely to experience more structure, and be expected to follow very clearly defined pre-existing processes. Your job scope will likely be more focused than it would be at a startup. You&amp;rsquo;ll experience less freedom in general, but also more certainty in what&amp;rsquo;s expected of you.&lt;/p&gt;
&lt;p&gt;In the end, especially at the beginning of your career, don&amp;rsquo;t put too much stock in choosing one or the other. If you like the company, big or small, give it a try. If you&amp;rsquo;re not happy there after a few months, then try another one. No career decision is ever permanent.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also worthwhile to note that even if you find a company you like the first time around, it&amp;rsquo;s in your best interest to change companies after one or two years. The majority of the salary raises you&amp;rsquo;ll earn in your lifetime will occur in the first ten years of your career. Say you&amp;rsquo;re hired by Company A as a junior data scientist for two years - after two years, you&amp;rsquo;re no longer a junior. You can now earn, say, a 30% higher salary in a data scientist position, but it&amp;rsquo;s unlikely that Company A will give you a 30% raise after two years. At that point it&amp;rsquo;s time to find Company B and put a few more years of experience on your resume, then probably change companies again. You don&amp;rsquo;t earn the big bucks sticking with one company for decades - you&amp;rsquo;ll always be the junior developer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;datasci-offstage.jpg&#34; alt=&#34;Talking offstage.&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-do-you-look-for-when-hiring-a-candidate&#34;&gt;What do you look for when hiring a candidate?&lt;/h2&gt;
&lt;p&gt;Overall, the most important skills for a data science candidate are soft skills. Curiosity, tenacity, and good communication skills are vital. Persistence, especially when it comes to adapting to a quickly changing industry, is important. The most promising candidates are passionate enough about the field to be learning everything they can, even outside of their work scope. Hard skills like coding and algorithms can be taught - it&amp;rsquo;s the soft skills that set good candidates apart.&lt;/p&gt;
&lt;p&gt;Hacking skills are also vital. This doesn&amp;rsquo;t necessarily mean you can write code. Someone who has a grasp of overall concepts, knows algorithms, and has curiosity enough to continuously learn is going to go farther than someone who can just write code. It takes creativity to build hacking skills on top of being familiar with the basic navigation points. Having the ability to come up with solutions that use available tools in new ways - that&amp;rsquo;s hacking skill.&lt;/p&gt;
&lt;p&gt;Design thinking is another important asset. Being able to understand how systems integrate on both technical and business levels is very valuable. If you&amp;rsquo;re able to see the big picture, you&amp;rsquo;re more likely to find different ways to accomplish the overall objective.&lt;/p&gt;
&lt;p&gt;You might think that seeing buzzwords on resumes makes you look more attractive as a candidate - more often, it stands out as a red flag. Putting &amp;ldquo;advanced machine learning&amp;rdquo; on your CV and then demonstrating that you don&amp;rsquo;t know basic algorithms doesn&amp;rsquo;t look good. It&amp;rsquo;s your projects and your interests outside of the job you&amp;rsquo;re applying for that say the most about you. Popular topics in this industry change fast - you&amp;rsquo;re better off having a solid grasp of basic fundamentals as well as a broad array of experience than name-dropping whatever&amp;rsquo;s trending.&lt;/p&gt;
&lt;h2 id=&#34;is-there-a-future-for-humans-in-the-data-science-field-when-will-the-machines-replace-us&#34;&gt;Is there a future for humans in the data science field? When will the machines replace us?&lt;/h2&gt;
&lt;p&gt;This isn&amp;rsquo;t a question unique to data science, and many historical examples already exist. Financial investment is a good example - where you used to have a human do calculations and make predictions, computers now do a lot of that automatically, making decisions about risk and possible payoff every day.&lt;/p&gt;
&lt;p&gt;Where humans won&amp;rsquo;t be replaced, just as in other industries that have embraced automation, is in the human element. You&amp;rsquo;ll still need people to handle communication, be creative, be curious, make interpretations and understand problems&amp;hellip; all those things are fundamentally human aspects of enterprise.&lt;/p&gt;
&lt;p&gt;Ultimately, machines and more automation will make human work less of a grind. By automating the mundane stuff, like data sanitization for example, human minds are freed up to develop more interesting things.&lt;/p&gt;
&lt;h2 id=&#34;what-are-the-future-applications-for-data-driven-automation&#34;&gt;What are the future applications for data-driven automation?&lt;/h2&gt;
&lt;p&gt;Legal is a good next candidate for automation. There&amp;rsquo;s a lot there that can be handled by programs using data to assess risk.&lt;/p&gt;
&lt;p&gt;Medicine is another field ripe for advances through data. Radiologists, your days are numbered: image detection is coming for you. The whole field of diagnostics is about to drastically change.&lt;/p&gt;
&lt;p&gt;A particularly interesting recent application for data science is in language translation. By looking at similarities in sentence structure and colloquial speech across different languages, we&amp;rsquo;re able to sort similar words based on the &amp;ldquo;space&amp;rdquo; they occupy within the language structure.&lt;/p&gt;
&lt;p&gt;Insurance - the original data science industry - already is and will continue to become very automated. With increased ability to use data to assess risk, we&amp;rsquo;re beginning to see new creative insurance products being introduced. E-commerce companies can now buy insurance on the risk a customer will return a product - hard to do without the accessibility of data that we have today.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-push-data-driven-decisions-and-get-my-boss-to-agree-with-me&#34;&gt;How do I push data-driven decisions and get my boss to agree with me?&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s a loaded question. The bottom line is that it depends on the company&amp;rsquo;s data culture and decision path. We&amp;rsquo;ve experienced working for management who say, &amp;ldquo;We&amp;rsquo;ve already made the decisions, we just need the data to prove it.&amp;rdquo; Obviously, that&amp;rsquo;s a tough position to work from.&lt;/p&gt;
&lt;p&gt;Generally, ask yourself, &amp;ldquo;Am I making my boss look good?&amp;rdquo; You might hear that and think, &amp;ldquo;Why would I let my boss get all the credit?&amp;rdquo; - but who cares? Let them take the credit. If you&amp;rsquo;re producing good work, you&amp;rsquo;re making your team look good. If you make your team look good, you&amp;rsquo;re indispensible to your team and your boss. People who are indispensible are listened to.&lt;/p&gt;
&lt;h2 id=&#34;what-s-your-best-advice-for-a-budding-data-scientist&#34;&gt;What&amp;rsquo;s your best advice for a budding data scientist?&lt;/h2&gt;
&lt;p&gt;Don&amp;rsquo;t be too keen to define yourself too quickly. If you narrow your focus too much, especially when you&amp;rsquo;re learning, you can get stuck in a situation of having become an expert in &amp;ldquo;Technology A, version 3&amp;rdquo; when companies are looking to hire for experts in version 4. It happens.&lt;/p&gt;
&lt;p&gt;A broad understanding of fundamentals will be far more valuable to you on the whole. Maybe you start out writing code, and decide you don&amp;rsquo;t like it, but discover that you&amp;rsquo;re really good at designing big picture stuff and leading teams, and you end up as a technical lead. It could even vary depending on the company you work for - so stay flexible.&lt;/p&gt;
&lt;p&gt;Your best bet is to follow what you&amp;rsquo;re passionate about, and try to understand a wide range of overall concepts. Spend the majority of your efforts learning things that are timeless, like the base technologies under hot-topic items like TensorFlow. Arm yourself with a broad understanding of the terrain, different companies, and the products that are out there.&lt;/p&gt;
&lt;p&gt;If you focus on learning code specifically, learning one language well makes it easier to learn others. Make sure you understand the basics.&lt;/p&gt;
&lt;h3 id=&#34;tl-dr-it&#34;&gt;TL;dr it:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Adam:&lt;/strong&gt; Talk more and don&amp;rsquo;t give up.&lt;br /&gt;
&lt;strong&gt;Anthony:&lt;/strong&gt; [Be] courageous, and hands-on.&lt;br /&gt;
&lt;strong&gt;Gabriel:&lt;/strong&gt; Be creative.&lt;br /&gt;
&lt;strong&gt;Guo Jun:&lt;/strong&gt; It&amp;rsquo;s worth the pain.&lt;br /&gt;
&lt;strong&gt;Misrab:&lt;/strong&gt; Evaluate yourself and maintain a feedback loop.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;datasci-crowd.jpg&#34; alt=&#34;The crowd at GA Singapore&#34; /&gt;
&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/GA_Singapore&#34;&gt;General Assembly&lt;/a&gt; is one of many schools and resources available to those interested in a career in data science. I&amp;rsquo;ve listed a few others in &lt;a href=&#34;https://victoria.dev/blog/top-free-resources-for-developing-coding-superpowers/&#34;&gt;this post&lt;/a&gt; if you&amp;rsquo;re looking for more. Good luck!&lt;/p&gt;</content:encoded><enclosure url="https://victoria.dev/blog/things-you-need-to-know-about-becoming-a-data-scientist/cover_datasci-panelists_hud75b6aee53166895e543034fff84f78c_103732_640x0_resize_q75_box.jpg" type="image/jpg"/></item></channel></rss>