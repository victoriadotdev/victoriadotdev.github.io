<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on victoria.dev</title><link>https://victoria.dev/tags/git/</link><description>Recent content in git on victoria.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>hello@victoria.dev (Victoria Drake)</managingEditor><webMaster>hello@victoria.dev (Victoria Drake)</webMaster><lastBuildDate>Mon, 04 Nov 2019 09:13:23 -0400</lastBuildDate><atom:link href="https://victoria.dev/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Publishing GitHub event data with GitHub Actions and Pages</title><link>https://victoria.dev/blog/publishing-github-event-data-with-github-actions-and-pages/</link><pubDate>Mon, 04 Nov 2019 09:13:23 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/publishing-github-event-data-with-github-actions-and-pages/</guid><description>Teams who work on GitHub rely on event data to collaborate. The data recorded as issues, pull requests, and comments, become vital to understanding the project.
With the general availability of GitHub Actions, we have a chance to programmatically access and preserve GitHub event data in our repository. Making the data part of the repository itself is a way of preserving it outside of GitHub, and also gives us the ability to feature the data on a front-facing website, such as with GitHub Pages, through an automated process that&amp;rsquo;s part of our CI/CD pipeline.</description></item><item><title>How to do twice as much with half the keystrokes using `.bashrc`</title><link>https://victoria.dev/blog/how-to-do-twice-as-much-with-half-the-keystrokes-using-.bashrc/</link><pubDate>Wed, 21 Aug 2019 09:17:02 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-do-twice-as-much-with-half-the-keystrokes-using-.bashrc/</guid><description>In my recent post about setting up Ubuntu with Bash scripts, I briefly alluded to the magic of .bashrc. This didn&amp;rsquo;t really do it justice, so here&amp;rsquo;s a quick post that offers a bit more detail about what the Bash configuration file can do.
My current configuration hugely improves my workflow, and saves me well over 50% of the keystrokes I would have to employ without it! Let&amp;rsquo;s look at some examples of aliases, functions, and prompt configurations that can improve our workflow by helping us be more efficient with fewer key presses.</description></item><item><title>How to write Bash one-liners for cloning and managing GitHub and GitLab repositories</title><link>https://victoria.dev/blog/how-to-write-bash-one-liners-for-cloning-and-managing-github-and-gitlab-repositories/</link><pubDate>Tue, 06 Aug 2019 10:55:19 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-write-bash-one-liners-for-cloning-and-managing-github-and-gitlab-repositories/</guid><description>Few things are more satisfying to me than one elegant line of Bash that automates hours of tedious work. As part of some recent explorations into automatically re-creating my laptop with Bash scripts, I wanted to find a way to easily clone my GitHub-hosted repositories to a new machine. After a bit of digging around, I wrote a one-liner that did just that. Then, in the spirit of not putting all our eggs in the same basket, I wrote another one-liner to automatically create and push to GitLab-hosted backups as well.</description></item><item><title>Two ways to deploy a public GitHub Pages site from a private Hugo repository</title><link>https://victoria.dev/blog/two-ways-to-deploy-a-public-github-pages-site-from-a-private-hugo-repository/</link><pubDate>Mon, 22 Apr 2019 10:05:15 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/two-ways-to-deploy-a-public-github-pages-site-from-a-private-hugo-repository/</guid><description>Tools like Travis CI and Netlify offer some pretty nifty features, like seamlessly deploying your GitHub Pages site when changes are pushed to its repository. Along with a static site generator like Hugo, keeping a blog up to date is pretty painless.
I&amp;rsquo;ve used Hugo to build my site for years, but until this past week I&amp;rsquo;d never hooked up my Pages repository to any deployment service. Why? Because using a tool that built my site before deploying it seemed to require having the whole recipe in one place - and if you&amp;rsquo;re using GitHub Pages with the free version of GitHub, that place is public.</description></item><item><title>A remote sync solution for iOS and Linux: Git and Working Copy</title><link>https://victoria.dev/blog/a-remote-sync-solution-for-ios-and-linux-git-and-working-copy/</link><pubDate>Fri, 15 Mar 2019 11:55:28 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/a-remote-sync-solution-for-ios-and-linux-git-and-working-copy/</guid><description>I&amp;rsquo;m always looking for pockets of time in which I can be productive. If you add up the minutes you spend in limbo while waiting in line, commuting, or waiting for food delivery (just me?), you may just find an extra hour or two in your day.
To take full advantage of these bits of time, I needed a solution that let me pick up work on my Git repositories wherever I happen to be.</description></item><item><title>Git commit practices your future self will thank you for</title><link>https://victoria.dev/blog/git-commit-practices-your-future-self-will-thank-you-for/</link><pubDate>Mon, 06 Aug 2018 08:54:56 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/git-commit-practices-your-future-self-will-thank-you-for/</guid><description>A history of clean commits can be evidence of a lot of things: attention to detail, good work ethic, and genuine investment in the project. What do your Git commits say about you?
Here&amp;rsquo;s how you can create and maintain a clean and orderly Git commit history using message templates, learning how to squash commits, using git stash, and creating annotated commit tags.
What it means to commit responsibly Whether our code will be seen by the entire open source community or just future versions of ourselves, either one will be grateful if we commit responsibly today.</description></item><item><title>An automatic interactive pre-commit checklist, in the style of infomercials</title><link>https://victoria.dev/blog/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials/</link><pubDate>Mon, 23 Jul 2018 09:38:09 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials/</guid><description>What&amp;rsquo;s that, you say? You&amp;rsquo;ve become tired of regular old boring paper checklists? Well, my friend, today is your lucky day! You, yes, you, can become the proud owner of a brand-spanking-new automatic interactive pre-commit hook checklist! You&amp;rsquo;re gonna love this! Your life will be so much easier! Just wait until your friends see you.
What&amp;rsquo;s a pre-commit hook Did you know that nearly 1 out of 5 coders are too embarrassed to ask this question?</description></item></channel></rss>