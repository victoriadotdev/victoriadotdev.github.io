<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech team on victoria.dev</title><link>https://victoria.dev/tags/tech-team/</link><description>Recent content in tech team on victoria.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>hello@victoria.dev (Victoria Drake)</managingEditor><webMaster>hello@victoria.dev (Victoria Drake)</webMaster><lastBuildDate>Tue, 09 Feb 2021 05:34:48 -0500</lastBuildDate><atom:link href="https://victoria.dev/tags/tech-team/index.xml" rel="self" type="application/rss+xml"/><item><title>Do I raise or return errors in Python?</title><link>https://victoria.dev/blog/do-i-raise-or-return-errors-in-python/</link><pubDate>Tue, 09 Feb 2021 05:34:48 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/do-i-raise-or-return-errors-in-python/</guid><description>I hear this question a lot: &amp;ldquo;Do I raise or return this error in Python?&amp;rdquo;
This is probably because the right answer will depend on your situation and the goals of your application logic. Either choice can help you ensure your Python code doesn&amp;rsquo;t fail silently, saving you and your teammates from having to hunt down deeply entrenched errors.
Here&amp;rsquo;s the difference between raise and return when handling failures in Python, and how to ensure your code doesn&amp;rsquo;t fail silently.</description></item><item><title>What tech leaders do before going on vacation</title><link>https://victoria.dev/blog/what-tech-leaders-do-before-going-on-vacation/</link><pubDate>Mon, 01 Feb 2021 04:02:54 -0600</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/what-tech-leaders-do-before-going-on-vacation/</guid><description>As a technical person who leads a technical team, I know firsthand that it can be easy to get lost in finishing up your own work before a vacation. It takes a bit of dedicated attention to ensure you don&amp;rsquo;t neglect the day-to-day tasks that don’t vanish while you’re away.
Here’s a pre-PTO checklist to make sure you’ve taken care of those responsibilities before you take off for a much-deserved vacation.</description></item><item><title>How to write good documentation</title><link>https://victoria.dev/blog/how-to-write-good-documentation/</link><pubDate>Mon, 14 Dec 2020 04:53:10 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-write-good-documentation/</guid><description>If you&amp;rsquo;ve ever half-written a software project before taking a few days off, this is the article you&amp;rsquo;ll discover you needed when you reopen that IDE.
In the technology teams I lead, we make a constant effort to document all the things. Documentation lives alongside the code as an equal player. This helps ensure that no one needs to make assumptions about how something works, or is calling lengthy meetings to gain working knowledge of a feature.</description></item><item><title>Make your team more productive by literally doing one thing</title><link>https://victoria.dev/blog/make-your-team-more-productive-by-literally-doing-one-thing/</link><pubDate>Mon, 07 Dec 2020 15:01:25 -0600</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/make-your-team-more-productive-by-literally-doing-one-thing/</guid><description>In the tech teams I lead, &amp;ldquo;priority&amp;rdquo; has no plural form.
Whether you&amp;rsquo;re leading a team of people or leading yourself, it&amp;rsquo;s important to take account of all the important things that need doing in your organization. This does not mean that everything can be equally important.
Logically, everything can&amp;rsquo;t be. Tasks are typically interdependent, and there&amp;rsquo;s always one task on which another depends. Tasks can be time-sensitive. Certain tasks might block a logical path towards a goal.</description></item><item><title>Increase developer confidence with a great Django test suite</title><link>https://victoria.dev/blog/increase-developer-confidence-with-a-great-django-test-suite/</link><pubDate>Thu, 01 Oct 2020 05:50:37 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/increase-developer-confidence-with-a-great-django-test-suite/</guid><description>If you regard writing tests as a lame checkbox task, nothing could be farther from the truth. Done correctly, tests are one of your application&amp;rsquo;s most valuable assets.
The Django framework in particular offers your team the opportunity to create an efficient testing practice, based on the Python standard library unittest. Proper tests in Django are fast to write, faster to run, and can offer you a seamless continuous integration solution for taking the pulse of your developing application.</description></item><item><title>Django project best practices to keep your developers happy</title><link>https://victoria.dev/blog/django-project-best-practices-to-keep-your-developers-happy/</link><pubDate>Tue, 22 Sep 2020 04:55:19 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/django-project-best-practices-to-keep-your-developers-happy/</guid><description>Do you want your team to enjoy your development workflow? Do you think building software should be fun and existentially fulfilling? If so, this is the post for you!
I&amp;rsquo;ve been developing with Django for years, and I&amp;rsquo;ve never been happier with my Django project set up than I am right now. Here&amp;rsquo;s how I&amp;rsquo;m making a day of developing with Django the most relaxing and enjoyable development experience possible for myself and my engineering team.</description></item><item><title>How GitHub Codespaces increases productivity and lowers barriers</title><link>https://victoria.dev/blog/how-github-codespaces-increases-productivity-and-lowers-barriers/</link><pubDate>Sat, 15 Aug 2020 16:08:08 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-github-codespaces-increases-productivity-and-lowers-barriers/</guid><description>The most recent integration between Visual Studio Code and GitHub can help make development accessible and welcoming: Codespaces in GitHub!
Now in beta, GitHub Codespaces provide an online, in-the-browser IDE powered by Visual Studio Code. This lets you use this full-featured IDE, complete with extensions, terminal, Git commands, and all the settings you&amp;rsquo;re accustomed to, on any machine. You can now bring your development workflow anywhere using a tablet or other browser-based device.</description></item><item><title>How to create a self-documenting Makefile</title><link>https://victoria.dev/blog/how-to-create-a-self-documenting-makefile/</link><pubDate>Wed, 05 Aug 2020 08:55:19 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-create-a-self-documenting-makefile/</guid><description>My new favorite way to completely underuse a Makefile? Creating personalized, per-project repository workflow command aliases that you can check in.
Can a Makefile improve your DevOps and keep developers happy? How awesome would it be if a new developer working on your project didn&amp;rsquo;t start out by copying and pasting commands from your README? What if instead of:
pip3 install pipenv pipenv shell --python 3.8 pipenv install --dev npm install pre-commit install --install-hooks # look up how to install Framework X.</description></item><item><title>Secure web forms for the front-end developer</title><link>https://victoria.dev/blog/secure-web-forms-for-the-front-end-developer/</link><pubDate>Wed, 11 Dec 2019 08:27:31 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/secure-web-forms-for-the-front-end-developer/</guid><description>While cybersecurity is often thought of in terms of databases and architecture, much of a strong security posture relies on elements in the domain of the front-end developer. For certain potentially devastating vulnerabilities like SQL injection and Cross-Site Scripting (XSS), a well-considered user interface is the first line of defense.
Here are a few areas of focus for front-end developers who want to help fight the good fight.
Control user input A whole whack of crazy things can happen when developers build a form that fails to control user input.</description></item><item><title>Git commit practices your future self will thank you for</title><link>https://victoria.dev/blog/git-commit-practices-your-future-self-will-thank-you-for/</link><pubDate>Mon, 06 Aug 2018 08:54:56 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/git-commit-practices-your-future-self-will-thank-you-for/</guid><description>A history of clean commits can be evidence of a lot of things: attention to detail, good work ethic, and genuine investment in the project. What do your Git commits say about you?
Here&amp;rsquo;s how you can create and maintain a clean and orderly Git commit history using message templates, learning how to squash commits, using git stash, and creating annotated commit tags.
What it means to commit responsibly Whether our code will be seen by the entire open source community or just future versions of ourselves, either one will be grateful if we commit responsibly today.</description></item></channel></rss>