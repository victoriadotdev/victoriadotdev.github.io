<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>open source on victoria.dev</title><link>https://victoria.dev/tags/open-source/</link><description>Recent content in open source on victoria.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>hello@victoria.dev (Victoria Drake)</managingEditor><webMaster>hello@victoria.dev (Victoria Drake)</webMaster><lastBuildDate>Tue, 12 Jan 2021 05:50:53 -0500</lastBuildDate><atom:link href="https://victoria.dev/tags/open-source/index.xml" rel="self" type="application/rss+xml"/><item><title>How to get hired as a software developer</title><link>https://victoria.dev/blog/how-to-get-hired-as-a-software-developer/</link><pubDate>Tue, 12 Jan 2021 05:50:53 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-get-hired-as-a-software-developer/</guid><description>I&amp;rsquo;m asked this question a lot, so let me be the first to give you the good news: there&amp;rsquo;s no one right answer. As general tech-literacy increases, the culture of the coding industry is steadily, thankfully, moving away from a checklist approach. Instead of degrees and pre-requisites when it comes to deciding whether you&amp;rsquo;re qualified to be hired as a software developer, companies (including my own) are far more concerned with just one question.</description></item><item><title>Be brave and build in public</title><link>https://victoria.dev/blog/be-brave-and-build-in-public/</link><pubDate>Thu, 24 Dec 2020 04:57:31 -0600</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/be-brave-and-build-in-public/</guid><description>I used to think that when I wanted to make updates to a project, I ought to hold back and do a big re-launch with all the changes at once. I figured that seeing big changes would feel like Christmas!
Unfortunately, Christmas only comes once a year. After years in the tech and cybersecurity world, my perspective has changed.
I&amp;rsquo;ve found that people, including myself, value receiving small, constant, incremental improvements far more than big changes once or a few times a year.</description></item><item><title>OWASP Web Security Testing Guide v4.2 released</title><link>https://victoria.dev/blog/owasp-web-security-testing-guide-v4.2-released/</link><pubDate>Thu, 03 Dec 2020 16:02:33 -0600</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/owasp-web-security-testing-guide-v4.2-released/</guid><description>I&amp;rsquo;m very happy and proud to share that the Open Web Application Security Project (OWASP) Web Security Testing Guide v4.2 is now available! This update is the result of a lot of hard work by the repository team and many dedicated contributors. With a team like this, I&amp;rsquo;m honored to be a core maintainer and co-author.
Here&amp;rsquo;s a reprint of the announcement I wrote for owasp.org. If you&amp;rsquo;re interested in security testing for web applications and APIs, this is an update you&amp;rsquo;ll definitely want to check out!</description></item><item><title>How GitHub Codespaces increases productivity and lowers barriers</title><link>https://victoria.dev/blog/how-github-codespaces-increases-productivity-and-lowers-barriers/</link><pubDate>Sat, 15 Aug 2020 16:08:08 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-github-codespaces-increases-productivity-and-lowers-barriers/</guid><description>The most recent integration between Visual Studio Code and GitHub can help make development accessible and welcoming: Codespaces in GitHub!
Now in beta, GitHub Codespaces provide an online, in-the-browser IDE powered by Visual Studio Code. This lets you use this full-featured IDE, complete with extensions, terminal, Git commands, and all the settings you&amp;rsquo;re accustomed to, on any machine. You can now bring your development workflow anywhere using a tablet or other browser-based device.</description></item><item><title>Look mom, I'm a GitHub Action Hero</title><link>https://victoria.dev/blog/look-mom-im-a-github-action-hero/</link><pubDate>Sat, 27 Jun 2020 09:06:33 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/look-mom-im-a-github-action-hero/</guid><description>GitHub recently interviewed me for their blog editorial entitled GitHub Action Hero: Victoria Drake. Here&amp;rsquo;s a behind-the-scenes peek at the original interview questions and my answers.
What is the name of your Action? Please include a link too. Among the several Actions I&amp;rsquo;ve built, I have two current favorites. One is hugo-remote, which lets you continuously deploy a Hugo static site from a private source repository to a public GitHub Pages repository.</description></item><item><title>How to choose and care for a secure open source project</title><link>https://victoria.dev/blog/how-to-choose-and-care-for-a-secure-open-source-project/</link><pubDate>Mon, 25 May 2020 05:53:09 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-choose-and-care-for-a-secure-open-source-project/</guid><description>There is a rather progressive sect of the software development world that believes that most people would be a lot happier and get a lot more work done if they just stopped building things that someone else has already built and is offering up for free use. They&amp;rsquo;re called the open source community. They want you to take their stuff.
Besides existing without you having to lift a finger, open source tools and software have some distinct advantages.</description></item><item><title>Hugo vs Jekyll: an epic battle of static site generator themes</title><link>https://victoria.dev/blog/hugo-vs-jekyll-an-epic-battle-of-static-site-generator-themes/</link><pubDate>Mon, 27 Apr 2020 06:34:41 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/hugo-vs-jekyll-an-epic-battle-of-static-site-generator-themes/</guid><description>I recently took on the task of creating a documentation site theme for two projects. Both projects needed the same basic features, but one uses Jekyll while the other uses Hugo.
In typical developer rationality, there was clearly only one option. I decided to create the same theme in both frameworks, and to give you, dear reader, a side-by-side comparison.
This post isn&amp;rsquo;t a comprehensive theme-building guide, but intended to familiarize you with the process of building a theme in either generator.</description></item><item><title>Multithreaded Python: slithering through an I/O bottleneck</title><link>https://victoria.dev/blog/multithreaded-python-slithering-through-an-i/o-bottleneck/</link><pubDate>Fri, 28 Feb 2020 09:31:02 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/multithreaded-python-slithering-through-an-i/o-bottleneck/</guid><description>I recently developed a project that I called Hydra: a multithreaded link checker written in Python. Unlike many Python site crawlers I found while researching, Hydra uses only standard libraries, with no external dependencies like BeautifulSoup. It&amp;rsquo;s intended to be run as part of a CI/CD process, so part of its success depended on being fast.
Multiple threads in Python is a bit of a bitey subject (not sorry) in that the Python interpreter doesn&amp;rsquo;t actually let multiple threads execute at the same time.</description></item><item><title>Command line tricks for managing your messy open source repository</title><link>https://victoria.dev/blog/command-line-tricks-for-managing-your-messy-open-source-repository/</link><pubDate>Mon, 17 Feb 2020 08:05:06 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/command-line-tricks-for-managing-your-messy-open-source-repository/</guid><description>Effective collaboration, especially in open source software development, starts with effective organization. To make sure that nothing gets missed, the general rule, &amp;ldquo;one issue, one pull request&amp;rdquo; is a nice rule of thumb.
Instead of opening an issue with a large scope like, &amp;ldquo;Fix all the broken links in the documentation,&amp;rdquo; open source projects will have more luck attracting contributors with several smaller and more manageable issues. In the preceding example, you might scope broken links by section or by page.</description></item><item><title>Word bugs in software documentation and how to fix them</title><link>https://victoria.dev/blog/word-bugs-in-software-documentation-and-how-to-fix-them/</link><pubDate>Wed, 18 Dec 2019 09:01:23 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/word-bugs-in-software-documentation-and-how-to-fix-them/</guid><description>I&amp;rsquo;ve been an editor longer than I&amp;rsquo;ve been a developer, so this topic for me is a real root issue. ü•Å When I see a great project with poorly-written docs, it hits close to /home. Okay, okay, I&amp;rsquo;m done.
I help the Open Web Application Security Project (OWASP) with their Web Security Testing Guide (WSTG). I was recently tasked with writing a style guide and article template that show how to write technical instruction for testing software applications.</description></item></channel></rss>