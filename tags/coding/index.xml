<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coding on victoria.dev</title><link>https://victoria.dev/tags/coding/</link><description>Recent content in coding on victoria.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>hello@victoria.dev (Victoria Drake)</managingEditor><webMaster>hello@victoria.dev (Victoria Drake)</webMaster><lastBuildDate>Tue, 09 Feb 2021 05:34:48 -0500</lastBuildDate><atom:link href="https://victoria.dev/tags/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Do I raise or return errors in Python?</title><link>https://victoria.dev/blog/do-i-raise-or-return-errors-in-python/</link><pubDate>Tue, 09 Feb 2021 05:34:48 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/do-i-raise-or-return-errors-in-python/</guid><description>I hear this question a lot: &amp;ldquo;Do I raise or return this error in Python?&amp;rdquo;
This is probably because the right answer will depend on your situation and the goals of your application logic. Either choice can help you ensure your Python code doesn&amp;rsquo;t fail silently, saving you and your teammates from having to hunt down deeply entrenched errors.
Here&amp;rsquo;s the difference between raise and return when handling failures in Python, and how to ensure your code doesn&amp;rsquo;t fail silently.</description></item><item><title>Add search to Hugo static sites with Lunr</title><link>https://victoria.dev/blog/add-search-to-hugo-static-sites-with-lunr/</link><pubDate>Tue, 26 Jan 2021 09:25:17 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/add-search-to-hugo-static-sites-with-lunr/</guid><description>Yes, you can have an interactive search feature on your static site! No need for servers or paid subscriptions here. Thanks to the open source Lunr and the power of Hugo static site generator, you can create a client-side search index with just a template and some JavaScript.
A number of my readers have been kind enough to tell me that you find my blog useful, but there&amp;rsquo;s something that you don&amp;rsquo;t know.</description></item><item><title>How to get hired as a software developer</title><link>https://victoria.dev/blog/how-to-get-hired-as-a-software-developer/</link><pubDate>Tue, 12 Jan 2021 05:50:53 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-get-hired-as-a-software-developer/</guid><description>I&amp;rsquo;m asked this question a lot, so let me be the first to give you the good news: there&amp;rsquo;s no one right answer. As general tech-literacy increases, the culture of the coding industry is steadily, thankfully, moving away from a checklist approach. Instead of degrees and pre-requisites when it comes to deciding whether you&amp;rsquo;re qualified to be hired as a software developer, companies (including my own) are far more concerned with just one question.</description></item><item><title>How to become a software developer</title><link>https://victoria.dev/blog/how-to-become-a-software-developer/</link><pubDate>Tue, 05 Jan 2021 04:50:07 -0600</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-become-a-software-developer/</guid><description>As a Director of Engineering, I’m a software developer who hires and leads other software developers. It’s not surprising then that I get asked this question a lot, in various forms:
How do I become a software developer? What language or framework should I learn first? Where do I start? While I’m certain there’s no one right answer for everyone, I’m also certain that the world needs more software developers and systems thinkers.</description></item><item><title>Responsive pages and color themes with minimal CSS</title><link>https://victoria.dev/blog/responsive-pages-and-color-themes-with-minimal-css/</link><pubDate>Tue, 17 Nov 2020 06:04:58 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/responsive-pages-and-color-themes-with-minimal-css/</guid><description>Hello, do come in! If you&amp;rsquo;re reading this on my website, you may notice I&amp;rsquo;ve spruced up a bit. Victoria.dev can now better respond to your devices and preferences!
Most modern devices and web browsers allow users to choose either a light or dark theme for the user interface. With CSS media queries, you can have your own website&amp;rsquo;s styles change to match this user setting!
Media queries are also a common way to have elements on web pages change to suit different screen sizes.</description></item><item><title>Build your own serverless subscriber list with Go and AWS</title><link>https://victoria.dev/blog/build-your-own-serverless-subscriber-list-with-go-and-aws/</link><pubDate>Tue, 10 Nov 2020 04:52:50 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/build-your-own-serverless-subscriber-list-with-go-and-aws/</guid><description>You can now subscribe to my email list on victoria.dev! Here&amp;rsquo;s how I lovingly built a subscription sign up flow with email confirmation that doesn&amp;rsquo;t suck. You can too.
Introducing Simple Subscribe If you&amp;rsquo;re interested in managing your own mailing list or newsletter, you can set up Simple Subscribe on your own AWS resources to collect email addresses. This open source API is written in Go, and runs on AWS Lambda.</description></item><item><title>Increase developer confidence with a great Django test suite</title><link>https://victoria.dev/blog/increase-developer-confidence-with-a-great-django-test-suite/</link><pubDate>Thu, 01 Oct 2020 05:50:37 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/increase-developer-confidence-with-a-great-django-test-suite/</guid><description>If you regard writing tests as a lame checkbox task, nothing could be farther from the truth. Done correctly, tests are one of your application&amp;rsquo;s most valuable assets.
The Django framework in particular offers your team the opportunity to create an efficient testing practice, based on the Python standard library unittest. Proper tests in Django are fast to write, faster to run, and can offer you a seamless continuous integration solution for taking the pulse of your developing application.</description></item><item><title>Django project best practices to keep your developers happy</title><link>https://victoria.dev/blog/django-project-best-practices-to-keep-your-developers-happy/</link><pubDate>Tue, 22 Sep 2020 04:55:19 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/django-project-best-practices-to-keep-your-developers-happy/</guid><description>Do you want your team to enjoy your development workflow? Do you think building software should be fun and existentially fulfilling? If so, this is the post for you!
I&amp;rsquo;ve been developing with Django for years, and I&amp;rsquo;ve never been happier with my Django project set up than I am right now. Here&amp;rsquo;s how I&amp;rsquo;m making a day of developing with Django the most relaxing and enjoyable development experience possible for myself and my engineering team.</description></item><item><title>Manipulating data with Django migrations</title><link>https://victoria.dev/blog/manipulating-data-with-django-migrations/</link><pubDate>Mon, 14 Sep 2020 02:12:57 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/manipulating-data-with-django-migrations/</guid><description>Growing, successful applications are a lovely problem to have. As a product develops, it tends to accumulate complication the way your weekend cake project accumulates layers of frosting. Thankfully, Django, my favorite batteries-included framework, handles complexity pretty well.
Django models help humans work with data in a way that makes sense to our brains, and the framework offers plenty of classes you can inherit to help you rapidly develop a robust application from scratch.</description></item><item><title>How GitHub Codespaces increases productivity and lowers barriers</title><link>https://victoria.dev/blog/how-github-codespaces-increases-productivity-and-lowers-barriers/</link><pubDate>Sat, 15 Aug 2020 16:08:08 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-github-codespaces-increases-productivity-and-lowers-barriers/</guid><description>The most recent integration between Visual Studio Code and GitHub can help make development accessible and welcoming: Codespaces in GitHub!
Now in beta, GitHub Codespaces provide an online, in-the-browser IDE powered by Visual Studio Code. This lets you use this full-featured IDE, complete with extensions, terminal, Git commands, and all the settings you&amp;rsquo;re accustomed to, on any machine. You can now bring your development workflow anywhere using a tablet or other browser-based device.</description></item><item><title>How to create a self-documenting Makefile</title><link>https://victoria.dev/blog/how-to-create-a-self-documenting-makefile/</link><pubDate>Wed, 05 Aug 2020 08:55:19 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-create-a-self-documenting-makefile/</guid><description>My new favorite way to completely underuse a Makefile? Creating personalized, per-project repository workflow command aliases that you can check in.
Can a Makefile improve your DevOps and keep developers happy? How awesome would it be if a new developer working on your project didn&amp;rsquo;t start out by copying and pasting commands from your README? What if instead of:
pip3 install pipenv pipenv shell --python 3.8 pipenv install --dev npm install pre-commit install --install-hooks # look up how to install Framework X.</description></item><item><title>Goals are for Losers</title><link>https://victoria.dev/blog/goals-are-for-losers/</link><pubDate>Wed, 22 Jul 2020 06:36:36 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/goals-are-for-losers/</guid><description>I needed to grow my skill set, and fast.
I had been working as a freelance software developer. At the time my now-husband and I traveled constantly, living nomadically out of one or two carry-on bags each. All my worldly possessions fit in my 40L backpack. Like a fine wine, I paired this lifestyle with an equally freedom-filled career. I worked on short contracts, hustled for clients, and generally had the time of my life.</description></item><item><title>Writing efficient Django</title><link>https://victoria.dev/blog/writing-efficient-django/</link><pubDate>Thu, 09 Jul 2020 04:02:47 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/writing-efficient-django/</guid><description>I like Django. It&amp;rsquo;s a well-considered and intuitive framework with a name I can pronounce out loud. You can use it to to quickly spin up a weekend-sized project, and you can still use it to run full-blown production applications at scale. I&amp;rsquo;ve done both these things, and over the years I&amp;rsquo;ve discovered how to use some of Django&amp;rsquo;s features for maximum efficiency. These are:
Class-based versus function-based views Django models Retrieving objects with queries Let&amp;rsquo;s look at how these tools let you create a performant Django application that&amp;rsquo;s pleasant to build and maintain.</description></item><item><title>Look mom, I'm a GitHub Action Hero</title><link>https://victoria.dev/blog/look-mom-im-a-github-action-hero/</link><pubDate>Sat, 27 Jun 2020 09:06:33 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/look-mom-im-a-github-action-hero/</guid><description>GitHub recently interviewed me for their blog editorial entitled GitHub Action Hero: Victoria Drake. Here&amp;rsquo;s a behind-the-scenes peek at the original interview questions and my answers.
What is the name of your Action? Please include a link too. Among the several Actions I&amp;rsquo;ve built, I have two current favorites. One is hugo-remote, which lets you continuously deploy a Hugo static site from a private source repository to a public GitHub Pages repository.</description></item><item><title>Technical ergonomics for the efficient developer</title><link>https://victoria.dev/blog/technical-ergonomics-for-the-efficient-developer/</link><pubDate>Mon, 22 Jun 2020 06:33:28 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/technical-ergonomics-for-the-efficient-developer/</guid><description>This article isn&amp;rsquo;t going to tell you about saving your neck with a Roost stand, or your wrists with a split keyboard - I&amp;rsquo;ve already done that. This article is about saving your brain.
When I first began to program full time, I found myself constantly tired from the mental exertion. Programming is hard! Thankfully, you can take some solace in knowing it gets easier with practice, and with a great supporting cast.</description></item><item><title>If you want to build a treehouse, start at the bottom</title><link>https://victoria.dev/blog/if-you-want-to-build-a-treehouse-start-at-the-bottom/</link><pubDate>Mon, 11 May 2020 05:46:47 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/if-you-want-to-build-a-treehouse-start-at-the-bottom/</guid><description>If you&amp;rsquo;ve ever watched a kid draw a treehouse, you have some idea of how applications are built when security isn&amp;rsquo;t made a priority. It&amp;rsquo;s far more fun to draw the tire swing, front porch, and swimming pool than to worry about how a ten-thousand-gallon bucket of water stays suspended in midair. With too much attention spent on fun and flashy features, foundations suffer.
Of course, spending undue hours building a back end like Fort Knox may not be necessary for your application, either.</description></item><item><title>Hugo vs Jekyll: an epic battle of static site generator themes</title><link>https://victoria.dev/blog/hugo-vs-jekyll-an-epic-battle-of-static-site-generator-themes/</link><pubDate>Mon, 27 Apr 2020 06:34:41 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/hugo-vs-jekyll-an-epic-battle-of-static-site-generator-themes/</guid><description>I recently took on the task of creating a documentation site theme for two projects. Both projects needed the same basic features, but one uses Jekyll while the other uses Hugo.
In typical developer rationality, there was clearly only one option. I decided to create the same theme in both frameworks, and to give you, dear reader, a side-by-side comparison.
This post isn&amp;rsquo;t a comprehensive theme-building guide, but intended to familiarize you with the process of building a theme in either generator.</description></item><item><title>Breaking bottlenecks 🍾</title><link>https://victoria.dev/blog/breaking-bottlenecks/</link><pubDate>Tue, 25 Feb 2020 12:50:29 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/breaking-bottlenecks/</guid><description>I recently gave a lecture on the benefits of building non-blocking processes. This is a write-up of the full talk, minus any &amp;ldquo;ums&amp;rdquo; that may have occurred. You can view the slides here.
I&amp;rsquo;ve been helping out a group called the Open Web Application Security Project (OWASP). They&amp;rsquo;re a non-profit foundation that produces some of the foremost application testing guides and cybersecurity resources. OWASP&amp;rsquo;s publications, checklists, and reference materials are a help to security professionals, penetration testers, and developers all over the world.</description></item><item><title>The past ten years, or, how to get better at anything</title><link>https://victoria.dev/blog/the-past-ten-years-or-how-to-get-better-at-anything/</link><pubDate>Tue, 31 Dec 2019 08:27:31 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/the-past-ten-years-or-how-to-get-better-at-anything/</guid><description>If you want to get better at anything:
Solve your own problems, Write about it, Teach others. 1. Searching, a decade ago I was a young graduate with newly-minted freedoms, and I was about to fall in love. I had plenty of imagination, a couple handfuls of tenacity, and no sense of direction at all.
For much of my youth, when I encountered a problem, I just sort of bumped up against it.</description></item><item><title>Secure web forms for the front-end developer</title><link>https://victoria.dev/blog/secure-web-forms-for-the-front-end-developer/</link><pubDate>Wed, 11 Dec 2019 08:27:31 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/secure-web-forms-for-the-front-end-developer/</guid><description>While cybersecurity is often thought of in terms of databases and architecture, much of a strong security posture relies on elements in the domain of the front-end developer. For certain potentially devastating vulnerabilities like SQL injection and Cross-Site Scripting (XSS), a well-considered user interface is the first line of defense.
Here are a few areas of focus for front-end developers who want to help fight the good fight.
Control user input A whole whack of crazy things can happen when developers build a form that fails to control user input.</description></item><item><title>Secure application architecture basics: separation, configuration, and access</title><link>https://victoria.dev/blog/secure-application-architecture-basics-separation-configuration-and-access/</link><pubDate>Mon, 30 Sep 2019 08:03:12 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/secure-application-architecture-basics-separation-configuration-and-access/</guid><description>Software developers today are encouraged to focus on building, and that&amp;rsquo;s a great thing. We&amp;rsquo;re benefitting from maker culture, an attitude of &amp;ldquo;always be shipping,&amp;rdquo; open source collaboration, and a bevy of apps that help us prioritize and execute with maximum efficiency. We&amp;rsquo;re in an environment of constant creation, where both teams and solo entrepreneurs can be maximally productive.
Sometimes, this breakneck-speed productivity shows its downsides.
As I learn more about security best practices, I can&amp;rsquo;t help but see more and more applications that just don&amp;rsquo;t have a clue.</description></item><item><title>Migrating to the cloud but without screwing it up, or how to move house</title><link>https://victoria.dev/blog/migrating-to-the-cloud-but-without-screwing-it-up-or-how-to-move-house/</link><pubDate>Mon, 23 Sep 2019 08:03:12 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/migrating-to-the-cloud-but-without-screwing-it-up-or-how-to-move-house/</guid><description>For an application that&amp;rsquo;s ready to scale, not using managed cloud architecture these days is like insisting on digging your own well for water. It&amp;rsquo;s far more labour-intensive, requires buying all your own equipment, takes a lot more time, and there&amp;rsquo;s a higher chance you&amp;rsquo;re going to get it wrong because you don&amp;rsquo;t personally have a whole lot of experience digging wells, anyway.
That said - let&amp;rsquo;s just get this out of the way first - there is no cloud.</description></item><item><title>Git commit practices your future self will thank you for</title><link>https://victoria.dev/blog/git-commit-practices-your-future-self-will-thank-you-for/</link><pubDate>Mon, 06 Aug 2018 08:54:56 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/git-commit-practices-your-future-self-will-thank-you-for/</guid><description>A history of clean commits can be evidence of a lot of things: attention to detail, good work ethic, and genuine investment in the project. What do your Git commits say about you?
Here&amp;rsquo;s how you can create and maintain a clean and orderly Git commit history using message templates, learning how to squash commits, using git stash, and creating annotated commit tags.
What it means to commit responsibly Whether our code will be seen by the entire open source community or just future versions of ourselves, either one will be grateful if we commit responsibly today.</description></item><item><title>An automatic interactive pre-commit checklist, in the style of infomercials</title><link>https://victoria.dev/blog/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials/</link><pubDate>Mon, 23 Jul 2018 09:38:09 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials/</guid><description>What&amp;rsquo;s that, you say? You&amp;rsquo;ve become tired of regular old boring paper checklists? Well, my friend, today is your lucky day! You, yes, you, can become the proud owner of a brand-spanking-new automatic interactive pre-commit hook checklist! You&amp;rsquo;re gonna love this! Your life will be so much easier! Just wait until your friends see you.
What&amp;rsquo;s a pre-commit hook Did you know that nearly 1 out of 5 coders are too embarrassed to ask this question?</description></item><item><title>How to set up a short feedback loop as a solo coder</title><link>https://victoria.dev/blog/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/</link><pubDate>Mon, 02 Jul 2018 10:08:41 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/</guid><description>I&amp;rsquo;ve spent the last couple years as a solo freelance developer. Comparing this experience to previously working in companies, I&amp;rsquo;ve noticed that those of us who work alone can have fewer iterative opportunities for improvement than developers who work on teams. Integral to having opportunities to improve is the concept of a short feedback loop: a process of incorporating new learning from observation and previous experience continuously over a short period of time.</description></item><item><title>How to code a satellite algorithm and cook paella from scratch</title><link>https://victoria.dev/blog/how-to-code-a-satellite-algorithm-and-cook-paella-from-scratch/</link><pubDate>Fri, 08 Sep 2017 16:50:24 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-to-code-a-satellite-algorithm-and-cook-paella-from-scratch/</guid><description>What if I told you that by the end of this article, you&amp;rsquo;ll be able to calculate the orbital period of satellites around Earth using their average altitudes and&amp;hellip; You tuned out already, didn&amp;rsquo;t you?
Okay, how about this: I&amp;rsquo;m going to teach you how to make paella!
And you&amp;rsquo;ll have written a function that does the stuff I mentioned above, just like I did for a freeCodeCamp challenge.
I promise there&amp;rsquo;s an overarching moral lesson that will benefit you every day for the rest of your life.</description></item><item><title>Making sandwiches with closures in JavaScript</title><link>https://victoria.dev/blog/making-sandwiches-with-closures-in-javascript/</link><pubDate>Sun, 28 May 2017 09:16:35 +0700</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/making-sandwiches-with-closures-in-javascript/</guid><description>Say you&amp;rsquo;re having a little coding get-together, and you need some sandwiches. You happen to know that everyone prefers a different type of sandwich, like chicken, ham, or peanut butter and mayo. You could make all these sandwiches yourself, but that would be tedious and boring.
Luckily, you know of a nearby sandwich shop that delivers. They have the ability and ingredients to make any kind of sandwich in the world, and all you have to do is order through their app.</description></item><item><title>Understanding Array.prototype.reduce() and recursion using apple pie</title><link>https://victoria.dev/blog/understanding-array.prototype.reduce-and-recursion-using-apple-pie/</link><pubDate>Thu, 18 May 2017 11:40:06 +0700</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/understanding-array.prototype.reduce-and-recursion-using-apple-pie/</guid><description>I was having trouble understanding reduce() and recursion in JavaScript, so I wrote this article to explain it to myself (hey, look, recursion!). I hope you find my examples both helpful and delicious.
Given an array with nested arrays:
var arr = [1, [2], [3, [[4]]]] We want to produce this:
var flat = [1, 2, 3, 4] Using for loops and if statements Naively, if we know the maximum number of nested arrays we&amp;rsquo;ll encounter (there are 4 in this example), we can use for loops to iterate through each array item, then if statements to check if each item is in itself an array, and so on&amp;hellip;</description></item><item><title>Iterating over objects and arrays: frequent errors</title><link>https://victoria.dev/blog/iterating-over-objects-and-arrays-frequent-errors/</link><pubDate>Tue, 16 May 2017 10:46:46 +0700</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/iterating-over-objects-and-arrays-frequent-errors/</guid><description>Here&amp;rsquo;s some complaining a quick overview of some code that has confounded me more than once. I&amp;rsquo;m told even very experienced developers encounter these situations regularly, so if you find yourself on your third cup of coffee scratching your head over why your code is doing exactly what you told it to do (and not what you want it to do), maybe this post can help you.
The example code is JavaScript, since that&amp;rsquo;s what I&amp;rsquo;ve been working in lately, but I believe the concepts to be pretty universal.</description></item><item><title>Top free resources for developing coding superpowers</title><link>https://victoria.dev/blog/top-free-resources-for-developing-coding-superpowers/</link><pubDate>Thu, 27 Apr 2017 08:14:09 +0800</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/top-free-resources-for-developing-coding-superpowers/</guid><description>I&amp;rsquo;m frequently asked for my opinion on how to get started with being a freelance developer. If you&amp;rsquo;re hoping to live the life of a remote working digital nomad, whichever career you choose, having a little coding expertise in your back pocket will be a big benefit.
Here&amp;rsquo;s a quick list of resources that you should definitely look at first if you&amp;rsquo;re hoping to gain some coding superpowers for free.</description></item><item><title>Iteration in Python: for, list, and map</title><link>https://victoria.dev/blog/iteration-in-python-for-list-and-map/</link><pubDate>Wed, 18 Jan 2017 21:58:28 +0700</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/iteration-in-python-for-list-and-map/</guid><description>Iteration in Python can be a little hard to understand. Subtle differences in terminology like iteration, iterator, iterating, and iterable aren&amp;rsquo;t the most beginner-friendly.
When tackling new concepts, I find concrete examples to be most useful. I&amp;rsquo;ll share some in this post and discuss appropriate situations for each. (Pun intended.)
For loop First, in pseudocode:
for iterating_variable in iterable: statement(s) I find for loops to be the most readable way to iterate in Python.</description></item></channel></rss>