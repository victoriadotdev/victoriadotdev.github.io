<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>websites on victoria.dev</title><link>https://victoria.dev/tags/websites/</link><description>Recent content in websites on victoria.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>hello@victoria.dev (Victoria Drake)</managingEditor><webMaster>hello@victoria.dev (Victoria Drake)</webMaster><lastBuildDate>Mon, 22 Feb 2021 04:00:43 -0500</lastBuildDate><atom:link href="https://victoria.dev/tags/websites/index.xml" rel="self" type="application/rss+xml"/><item><title>Digital resilience: redundancy for websites and communications</title><link>https://victoria.dev/blog/digital-resilience-redundancy-for-websites-and-communications/</link><pubDate>Mon, 22 Feb 2021 04:00:43 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/digital-resilience-redundancy-for-websites-and-communications/</guid><description>When what seems like half the planet noped out of WhatsApp after its terms of service update, applications like Signal (which I highly recommend) saw an unprecedented increase in user traffic. Signal had so many new users sign up that it overwhelmed their existing infrastructure and lead to a 24-hour-ish outage. The small team responded impressively quickly, especially given that a 4,200% spike in new users was utterly implausible before it ocurred.</description></item><item><title>Add search to Hugo static sites with Lunr</title><link>https://victoria.dev/blog/add-search-to-hugo-static-sites-with-lunr/</link><pubDate>Tue, 26 Jan 2021 09:25:17 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/add-search-to-hugo-static-sites-with-lunr/</guid><description>Yes, you can have an interactive search feature on your static site! No need for servers or paid subscriptions here. Thanks to the open source Lunr and the power of Hugo static site generator, you can create a client-side search index with just a template and some JavaScript.
A number of my readers have been kind enough to tell me that you find my blog useful, but there&amp;rsquo;s something that you don&amp;rsquo;t know.</description></item><item><title>Make your own independent website</title><link>https://victoria.dev/blog/make-your-own-independent-website/</link><pubDate>Sat, 16 Jan 2021 08:41:27 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/make-your-own-independent-website/</guid><description>The web that raised me was a digital playground in the truest sense. It was made up of HTML experiments frankensteined together by people still figuring it all out.
The beauty of not completely knowing what you&amp;rsquo;re doing is a lack of premature judgement. Without a standard to rise to, you&amp;rsquo;re free to go sideways. Explore. Try things that don&amp;rsquo;t work, without any expectation they will work. An open world with a beginner&amp;rsquo;s mindset.</description></item><item><title>Responsive pages and color themes with minimal CSS</title><link>https://victoria.dev/blog/responsive-pages-and-color-themes-with-minimal-css/</link><pubDate>Tue, 17 Nov 2020 06:04:58 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/responsive-pages-and-color-themes-with-minimal-css/</guid><description>Hello, do come in! If you&amp;rsquo;re reading this on my website, you may notice I&amp;rsquo;ve spruced up a bit. Victoria.dev can now better respond to your devices and preferences!
Most modern devices and web browsers allow users to choose either a light or dark theme for the user interface. With CSS media queries, you can have your own website&amp;rsquo;s styles change to match this user setting!
Media queries are also a common way to have elements on web pages change to suit different screen sizes.</description></item><item><title>Build your own serverless subscriber list with Go and AWS</title><link>https://victoria.dev/blog/build-your-own-serverless-subscriber-list-with-go-and-aws/</link><pubDate>Tue, 10 Nov 2020 04:52:50 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/build-your-own-serverless-subscriber-list-with-go-and-aws/</guid><description>You can now subscribe to my email list on victoria.dev! Here&amp;rsquo;s how I lovingly built a subscription sign up flow with email confirmation that doesn&amp;rsquo;t suck. You can too.
Introducing Simple Subscribe If you&amp;rsquo;re interested in managing your own mailing list or newsletter, you can set up Simple Subscribe on your own AWS resources to collect email addresses. This open source API is written in Go, and runs on AWS Lambda.</description></item><item><title>Hugo vs Jekyll: an epic battle of static site generator themes</title><link>https://victoria.dev/blog/hugo-vs-jekyll-an-epic-battle-of-static-site-generator-themes/</link><pubDate>Mon, 27 Apr 2020 06:34:41 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/hugo-vs-jekyll-an-epic-battle-of-static-site-generator-themes/</guid><description>I recently took on the task of creating a documentation site theme for two projects. Both projects needed the same basic features, but one uses Jekyll while the other uses Hugo.
In typical developer rationality, there was clearly only one option. I decided to create the same theme in both frameworks, and to give you, dear reader, a side-by-side comparison.
This post isn&amp;rsquo;t a comprehensive theme-building guide, but intended to familiarize you with the process of building a theme in either generator.</description></item><item><title>Publishing GitHub event data with GitHub Actions and Pages</title><link>https://victoria.dev/blog/publishing-github-event-data-with-github-actions-and-pages/</link><pubDate>Mon, 04 Nov 2019 09:13:23 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/publishing-github-event-data-with-github-actions-and-pages/</guid><description>Teams who work on GitHub rely on event data to collaborate. The data recorded as issues, pull requests, and comments, become vital to understanding the project.
With the general availability of GitHub Actions, we have a chance to programmatically access and preserve GitHub event data in our repository. Making the data part of the repository itself is a way of preserving it outside of GitHub, and also gives us the ability to feature the data on a front-facing website, such as with GitHub Pages, through an automated process that&amp;rsquo;s part of our CI/CD pipeline.</description></item><item><title>A lightweight, tool-agnostic CI/CD flow with GitHub Actions</title><link>https://victoria.dev/blog/a-lightweight-tool-agnostic-ci/cd-flow-with-github-actions/</link><pubDate>Mon, 28 Oct 2019 08:28:52 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/a-lightweight-tool-agnostic-ci/cd-flow-with-github-actions/</guid><description>Agnostic tooling is the clever notion that you should be able to run your code in various environments. With many continuous integration and continuous development (CI/CD) apps available, agnostic tooling gives developers a big advantage: portability.
Of course, having your CI/CD work everywhere is a tall order. Popular CI apps for GitHub repositories alone use a multitude of configuration languages spanning Groovy, YAML, TOML, JSON, and more&amp;hellip; all with differing syntax, of course.</description></item><item><title>A portable Makefile for continuous delivery with Hugo and GitHub Pages</title><link>https://victoria.dev/blog/a-portable-makefile-for-continuous-delivery-with-hugo-and-github-pages/</link><pubDate>Mon, 21 Oct 2019 09:09:06 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/a-portable-makefile-for-continuous-delivery-with-hugo-and-github-pages/</guid><description>Fun fact: I first launched this GitHub Pages site 1,018 days ago.
Since then, we&amp;rsquo;ve grown together. From early cringe-worthy commit messages, through eighty-six versions of Hugo, and up until last week, a less-than-streamlined multi-app continuous integration and deployment (CI/CD) workflow.
If you know me at all, you know I love to automate things. I&amp;rsquo;ve been using a combination of AWS Lambda, Netlify, and Travis CI to automatically build and publish this site.</description></item><item><title>Migrating to the cloud but without screwing it up, or how to move house</title><link>https://victoria.dev/blog/migrating-to-the-cloud-but-without-screwing-it-up-or-how-to-move-house/</link><pubDate>Mon, 23 Sep 2019 08:03:12 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/migrating-to-the-cloud-but-without-screwing-it-up-or-how-to-move-house/</guid><description>For an application that&amp;rsquo;s ready to scale, not using managed cloud architecture these days is like insisting on digging your own well for water. It&amp;rsquo;s far more labour-intensive, requires buying all your own equipment, takes a lot more time, and there&amp;rsquo;s a higher chance you&amp;rsquo;re going to get it wrong because you don&amp;rsquo;t personally have a whole lot of experience digging wells, anyway.
That said - let&amp;rsquo;s just get this out of the way first - there is no cloud.</description></item><item><title>How users and applications stay safe on the Internet: it's proxy servers all the way down</title><link>https://victoria.dev/blog/how-users-and-applications-stay-safe-on-the-internet-its-proxy-servers-all-the-way-down/</link><pubDate>Mon, 16 Sep 2019 09:35:28 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-users-and-applications-stay-safe-on-the-internet-its-proxy-servers-all-the-way-down/</guid><description>Both Internet users and Internet-connected applications can benefit from investing in cybersecurity. One core aspect of online privacy is the use of a proxy server, though this basic building block may not be initially visible underneath its more recognizable forms. Proxy servers are a useful thing to know about nowadays, for developers, software product owners, as well as the average dog on the Internet. Let&amp;rsquo;s explore what makes proxy servers an important piece of cybersecurity support.</description></item><item><title>Hackers are Googling your plain text passwords: preventing sensitive data exposure</title><link>https://victoria.dev/blog/hackers-are-googling-your-plain-text-passwords-preventing-sensitive-data-exposure/</link><pubDate>Mon, 09 Sep 2019 09:10:11 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/hackers-are-googling-your-plain-text-passwords-preventing-sensitive-data-exposure/</guid><description>Last week, I wrote about the importance of properly handling user input in our websites and applications. I alluded to an overarching security lesson that I hope to make explicit today: the security of our software, application, and customer data is built from the ground up, long before the product goes live.
The OWASP Top 10 is a comprehensive guide to web application security risks. It is relied upon by technology professionals, corporations, and those interested in cybersecurity or information security.</description></item><item><title>SQL injection and XSS: what white hat hackers know about trusting user input</title><link>https://victoria.dev/blog/sql-injection-and-xss-what-white-hat-hackers-know-about-trusting-user-input/</link><pubDate>Mon, 02 Sep 2019 09:01:23 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/sql-injection-and-xss-what-white-hat-hackers-know-about-trusting-user-input/</guid><description>Software developers have a lot on their minds. There are are myriad of questions to ask when it comes to creating a website or application: What technologies will we use? How will the architecture be set up? What functions do we need? What will the UI look like? Especially in a software market where shipping new apps seems more like a race for reputation than a well-considered process, one of the most important questions often falls to the bottom of the &amp;ldquo;Urgent&amp;rdquo; column: how will our product be secured?</description></item><item><title>A quick guide to changing your GitHub username</title><link>https://victoria.dev/blog/a-quick-guide-to-changing-your-github-username/</link><pubDate>Sun, 28 Jul 2019 15:19:13 -0400</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/a-quick-guide-to-changing-your-github-username/</guid><description>This being the 2,38947234th and probably last time I&amp;rsquo;ll change my username, (marriage is permanent, right?) I thought I&amp;rsquo;d better write a quick post on how this transition can be achieved as smoothly as possible. You can read official instructions on how to change your GitHub username here, and they will tell you how to do it and what happens. The following is a quick guide to some things to consider afterwards.</description></item><item><title>Moving to a new domain without breaking old links with AWS &amp; Disqus</title><link>https://victoria.dev/blog/moving-to-a-new-domain-without-breaking-old-links-with-aws-disqus/</link><pubDate>Wed, 10 Jan 2018 08:56:20 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/moving-to-a-new-domain-without-breaking-old-links-with-aws-disqus/</guid><description>I started blogging about my nomadic travels last year, and so far the habit has stuck. Like all side projects, I won&amp;rsquo;t typically invest heavily in setting up web properties before I can be reasonably certain that such an investment is worth my time or enjoyment. In other words: don&amp;rsquo;t buy the domain until you&amp;rsquo;ve proven to yourself that you&amp;rsquo;ll stick with it!
After some months of regular posting I felt I was ready to commit (short courtship, I know, but we&amp;rsquo;re all adults here) and I bought a dedicated domain, herOneBag.</description></item><item><title>Hosting your static site with AWS S3, Route 53, and CloudFront</title><link>https://victoria.dev/blog/hosting-your-static-site-with-aws-s3-route-53-and-cloudfront/</link><pubDate>Wed, 13 Dec 2017 20:46:12 -0500</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/hosting-your-static-site-with-aws-s3-route-53-and-cloudfront/</guid><description>Some time ago I decided to stop freeloading on GitHub pages and move one of my sites to Amazon Web Services (AWS). It turns out that I&amp;rsquo;m still mostly freeloading (yay free tier) so it amounted to a learning experience. Here are the components that let me host and serve the site at my custom domain with HTTPS.
Static site in Amazon Web Services S3 bucket Route 53 handling the DNS CloudFront for distribution and a custom SSL certificate I set all that up most of a year ago.</description></item><item><title>How I ditched WordPress and set up my custom domain HTTPS site for (almost) free</title><link>https://victoria.dev/blog/how-i-ditched-wordpress-and-set-up-my-custom-domain-https-site-for-almost-free/</link><pubDate>Sat, 28 Jan 2017 13:16:17 +0700</pubDate><author>hello@victoria.dev (Victoria Drake)</author><guid>https://victoria.dev/blog/how-i-ditched-wordpress-and-set-up-my-custom-domain-https-site-for-almost-free/</guid><description>I got annoyed with WordPress.com. While using the service has its pros (like https and a mobile responsive website, and being very visual and beginner-friendly) it&amp;rsquo;s limiting. For someone who&amp;rsquo;s comfortable enough to be tweaking CSS but who&amp;rsquo;s not interested in creating their own theme (or paying upwards of $50 for one), I felt I wasn&amp;rsquo;t really the type of consumer WordPress.com was suited to.
To start with, if you want to remove WordPress advertising and use a custom domain name, it&amp;rsquo;s a minimum of $3 per month.</description></item></channel></rss>